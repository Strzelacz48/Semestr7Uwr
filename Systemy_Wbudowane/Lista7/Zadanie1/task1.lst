
task1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800100  00001c66  00001cfa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  0080016c  0080016c  00001d66  2**0
                  ALLOC
  3 .stab         000010f8  00000000  00000000  00001d68  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000fb4  00000000  00000000  00002e60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00003e14  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003e28  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00003e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  0000445c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000049fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00004a18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__ctors_end>
       4:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       8:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
       c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      10:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      14:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      18:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      1c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      20:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      24:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      28:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      2c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      30:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      34:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      38:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      3c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      40:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      44:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      48:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      4c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      50:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      54:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      58:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      5c:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      60:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>
      64:	0c 94 f9 00 	jmp	0x1f2	; 0x1f2 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2529>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     17a:	47 00                                               G.

0000017c <pstr_an>:
     17c:	61 6e 00                                            an.

0000017f <pstr_nfinity>:
     17f:	6e 66 69 6e 69 74 79 00                             nfinity.

00000187 <pwr_m10>:
     187:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     197:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000019f <pwr_p10>:
     19f:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1af:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001b8 <__ctors_end>:
     1b8:	11 24       	eor	r1, r1
     1ba:	1f be       	out	0x3f, r1	; 63
     1bc:	cf ef       	ldi	r28, 0xFF	; 255
     1be:	d8 e0       	ldi	r29, 0x08	; 8
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	cd bf       	out	0x3d, r28	; 61

000001c4 <__do_copy_data>:
     1c4:	11 e0       	ldi	r17, 0x01	; 1
     1c6:	a0 e0       	ldi	r26, 0x00	; 0
     1c8:	b1 e0       	ldi	r27, 0x01	; 1
     1ca:	e6 e6       	ldi	r30, 0x66	; 102
     1cc:	fc e1       	ldi	r31, 0x1C	; 28
     1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <__do_copy_data+0x10>
     1d0:	05 90       	lpm	r0, Z+
     1d2:	0d 92       	st	X+, r0
     1d4:	ac 36       	cpi	r26, 0x6C	; 108
     1d6:	b1 07       	cpc	r27, r17
     1d8:	d9 f7       	brne	.-10     	; 0x1d0 <__do_copy_data+0xc>

000001da <__do_clear_bss>:
     1da:	21 e0       	ldi	r18, 0x01	; 1
     1dc:	ac e6       	ldi	r26, 0x6C	; 108
     1de:	b1 e0       	ldi	r27, 0x01	; 1
     1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <.do_clear_bss_start>

000001e2 <.do_clear_bss_loop>:
     1e2:	1d 92       	st	X+, r1

000001e4 <.do_clear_bss_start>:
     1e4:	a0 38       	cpi	r26, 0x80	; 128
     1e6:	b2 07       	cpc	r27, r18
     1e8:	e1 f7       	brne	.-8      	; 0x1e2 <.do_clear_bss_loop>
     1ea:	0e 94 bc 01 	call	0x378	; 0x378 <main>
     1ee:	0c 94 31 0e 	jmp	0x1c62	; 0x1c62 <_exit>

000001f2 <__bad_interrupt>:
     1f2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     1f6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     1fa:	95 ff       	sbrs	r25, 5
     1fc:	fc cf       	rjmp	.-8      	; 0x1f6 <uart_transmit>
  UDR0 = data;
     1fe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	08 95       	ret

00000208 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
     208:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     20c:	87 ff       	sbrs	r24, 7
     20e:	fc cf       	rjmp	.-8      	; 0x208 <uart_receive>
  return UDR0;
     210:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	08 95       	ret

00000218 <i2cInit>:
#include "i2c.h"
void i2cInit() {
  // ustaw bitrate
  // 8MHz / (16+2*TWBR*1) ~= 100kHz
  TWBR = 32;
     218:	80 e2       	ldi	r24, 0x20	; 32
     21a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  // uruchom TWI
  TWCR |= _BV(TWEN);
     21e:	ec eb       	ldi	r30, 0xBC	; 188
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	84 60       	ori	r24, 0x04	; 4
     226:	80 83       	st	Z, r24
     228:	08 95       	ret

0000022a <i2cWaitForComplete>:
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     22a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     22e:	87 ff       	sbrs	r24, 7
     230:	fc cf       	rjmp	.-8      	; 0x22a <i2cWaitForComplete>
}
     232:	08 95       	ret

00000234 <i2cStart>:
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     234:	84 ea       	ldi	r24, 0xA4	; 164
     236:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     23a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     23e:	87 ff       	sbrs	r24, 7
     240:	fc cf       	rjmp	.-8      	; 0x23a <i2cStart+0x6>
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
     242:	08 95       	ret

00000244 <i2cStop>:
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     244:	84 e9       	ldi	r24, 0x94	; 148
     246:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     24a:	08 95       	ret

0000024c <i2cReset>:
}
void i2cReset() {
  // wyślij warunek stopu i wyłącz TWI
  TWCR = _BV(TWINT) | _BV(TWSTO);
     24c:	80 e9       	ldi	r24, 0x90	; 144
     24e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     252:	08 95       	ret

00000254 <i2cReadAck>:
}
uint8_t i2cReadAck() {
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
     254:	84 ec       	ldi	r24, 0xC4	; 196
     256:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     25a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     25e:	87 ff       	sbrs	r24, 7
     260:	fc cf       	rjmp	.-8      	; 0x25a <i2cReadAck+0x6>
}
uint8_t i2cReadAck() {
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
  i2cWaitForComplete();
  return TWDR;
     262:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     266:	08 95       	ret

00000268 <i2cReadNoAck>:
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     268:	84 e8       	ldi	r24, 0x84	; 132
     26a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     26e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     272:	87 ff       	sbrs	r24, 7
     274:	fc cf       	rjmp	.-8      	; 0x26e <i2cReadNoAck+0x6>
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
  return TWDR;
     276:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     27a:	08 95       	ret

0000027c <i2cSend>:
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     27c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     280:	84 e8       	ldi	r24, 0x84	; 132
     282:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     286:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     28a:	87 ff       	sbrs	r24, 7
     28c:	fc cf       	rjmp	.-8      	; 0x286 <i2cSend+0xa>
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
}
     28e:	08 95       	ret

00000290 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     290:	87 e6       	ldi	r24, 0x67	; 103
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     298:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     29c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     2a0:	88 e1       	ldi	r24, 0x18	; 24
     2a2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     2a6:	86 e0       	ldi	r24, 0x06	; 6
     2a8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     2ac:	08 95       	ret

000002ae <read_addr>:
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     2ae:	94 ea       	ldi	r25, 0xA4	; 164
     2b0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     2b4:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2b8:	97 ff       	sbrs	r25, 7
     2ba:	fc cf       	rjmp	.-8      	; 0x2b4 <read_addr+0x6>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     2bc:	90 ea       	ldi	r25, 0xA0	; 160
     2be:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     2c2:	94 e8       	ldi	r25, 0x84	; 132
     2c4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     2c8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2cc:	97 ff       	sbrs	r25, 7
     2ce:	fc cf       	rjmp	.-8      	; 0x2c8 <read_addr+0x1a>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     2d0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     2d4:	84 e8       	ldi	r24, 0x84	; 132
     2d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     2da:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2de:	87 ff       	sbrs	r24, 7
     2e0:	fc cf       	rjmp	.-8      	; 0x2da <read_addr+0x2c>
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     2e2:	84 ea       	ldi	r24, 0xA4	; 164
     2e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     2e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2ec:	87 ff       	sbrs	r24, 7
     2ee:	fc cf       	rjmp	.-8      	; 0x2e8 <read_addr+0x3a>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     2f0:	81 ea       	ldi	r24, 0xA1	; 161
     2f2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     2f6:	84 e8       	ldi	r24, 0x84	; 132
     2f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     2fc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     300:	87 ff       	sbrs	r24, 7
     302:	fc cf       	rjmp	.-8      	; 0x2fc <read_addr+0x4e>
  i2cWaitForComplete();
  return TWDR;
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     304:	84 e8       	ldi	r24, 0x84	; 132
     306:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     30a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     30e:	87 ff       	sbrs	r24, 7
     310:	fc cf       	rjmp	.-8      	; 0x30a <read_addr+0x5c>
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
  return TWDR;
     312:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     316:	94 e9       	ldi	r25, 0x94	; 148
     318:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    i2cStart();
    i2cSend(eeprom_addr | 0x1 | ((addr & 0x100) >> 7));
    uint8_t data = i2cReadNoAck();
    i2cStop();
    return data;
}
     31c:	08 95       	ret

0000031e <write_addr>:
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     31e:	94 ea       	ldi	r25, 0xA4	; 164
     320:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     324:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     328:	97 ff       	sbrs	r25, 7
     32a:	fc cf       	rjmp	.-8      	; 0x324 <write_addr+0x6>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     32c:	90 ea       	ldi	r25, 0xA0	; 160
     32e:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     332:	94 e8       	ldi	r25, 0x84	; 132
     334:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     338:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     33c:	97 ff       	sbrs	r25, 7
     33e:	fc cf       	rjmp	.-8      	; 0x338 <write_addr+0x1a>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     340:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     344:	84 e8       	ldi	r24, 0x84	; 132
     346:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     34a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     34e:	87 ff       	sbrs	r24, 7
     350:	fc cf       	rjmp	.-8      	; 0x34a <write_addr+0x2c>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     352:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     356:	84 e8       	ldi	r24, 0x84	; 132
     358:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     35c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     360:	87 ff       	sbrs	r24, 7
     362:	fc cf       	rjmp	.-8      	; 0x35c <write_addr+0x3e>
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     364:	84 e9       	ldi	r24, 0x94	; 148
     366:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     36a:	8f e3       	ldi	r24, 0x3F	; 63
     36c:	9c e9       	ldi	r25, 0x9C	; 156
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <write_addr+0x50>
     372:	00 c0       	rjmp	.+0      	; 0x374 <write_addr+0x56>
     374:	00 00       	nop
     376:	08 95       	ret

00000378 <main>:
    _delay_ms(10);
}


int main()
{
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	00 d0       	rcall	.+0      	; 0x37e <main+0x6>
     37e:	00 d0       	rcall	.+0      	; 0x380 <main+0x8>
     380:	00 d0       	rcall	.+0      	; 0x382 <main+0xa>
     382:	cd b7       	in	r28, 0x3d	; 61
     384:	de b7       	in	r29, 0x3e	; 62

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     386:	87 e6       	ldi	r24, 0x67	; 103
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     38e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     392:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     396:	88 e1       	ldi	r24, 0x18	; 24
     398:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     39c:	86 e0       	ldi	r24, 0x06	; 6
     39e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
int main()
{
    // zainicjalizuj UART
    uart_init();
    // skonfiguruj strumienie wejścia/wyjścia
    fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
     3a2:	8c e6       	ldi	r24, 0x6C	; 108
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	2b ef       	ldi	r18, 0xFB	; 251
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	30 93 75 01 	sts	0x0175, r19	; 0x800175 <__data_end+0x9>
     3ae:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <__data_end+0x8>
     3b2:	24 e0       	ldi	r18, 0x04	; 4
     3b4:	31 e0       	ldi	r19, 0x01	; 1
     3b6:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <__data_end+0xb>
     3ba:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <__data_end+0xa>
     3be:	23 e0       	ldi	r18, 0x03	; 3
     3c0:	20 93 6f 01 	sts	0x016F, r18	; 0x80016f <__data_end+0x3>
     3c4:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <__data_end+0xd>
     3c8:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
     3cc:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__iob+0x5>
     3d0:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__iob+0x4>
     3d4:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <__iob+0x3>
     3d8:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <__iob+0x2>
     3dc:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__iob+0x1>
     3e0:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__iob>
#include "i2c.h"
void i2cInit() {
  // ustaw bitrate
  // 8MHz / (16+2*TWBR*1) ~= 100kHz
  TWBR = 32;
     3e4:	80 e2       	ldi	r24, 0x20	; 32
     3e6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
  // uruchom TWI
  TWCR |= _BV(TWEN);
     3ea:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     3ee:	84 60       	ori	r24, 0x04	; 4
     3f0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     3f4:	9e 01       	movw	r18, r28
     3f6:	2c 5f       	subi	r18, 0xFC	; 252
     3f8:	3f 4f       	sbci	r19, 0xFF	; 255
     3fa:	79 01       	movw	r14, r18
     3fc:	ae 01       	movw	r20, r28
     3fe:	4f 5f       	subi	r20, 0xFF	; 255
     400:	5f 4f       	sbci	r21, 0xFF	; 255
     402:	4a 01       	movw	r8, r20
     404:	ce 01       	movw	r24, r28
     406:	03 96       	adiw	r24, 0x03	; 3
     408:	9e 83       	std	Y+6, r25	; 0x06
     40a:	8d 83       	std	Y+5, r24	; 0x05
    i2cInit();
    // program testowy
    char command;
    while(1) {
        printf("ready\r\n");
        scanf("%c",&command);
     40c:	08 e0       	ldi	r16, 0x08	; 8
     40e:	11 e0       	ldi	r17, 0x01	; 1
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     410:	84 ea       	ldi	r24, 0xA4	; 164
     412:	48 2e       	mov	r4, r24
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     414:	90 ea       	ldi	r25, 0xA0	; 160
     416:	29 2e       	mov	r2, r25
  TWCR = _BV(TWINT) | _BV(TWEN);
     418:	24 e8       	ldi	r18, 0x84	; 132
     41a:	52 2e       	mov	r5, r18
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     41c:	34 e9       	ldi	r19, 0x94	; 148
     41e:	33 2e       	mov	r3, r19
        if (command == 'r')
        {
            printf("read\r\n");
            uint16_t addr;
            scanf("%d",&addr);
     420:	40 e4       	ldi	r20, 0x40	; 64
     422:	a4 2e       	mov	r10, r20
     424:	41 e0       	ldi	r20, 0x01	; 1
     426:	b4 2e       	mov	r11, r20
            printf("odczytano: %d\r\n",addr);
     428:	51 e1       	ldi	r21, 0x11	; 17
     42a:	c5 2e       	mov	r12, r21
     42c:	51 e0       	ldi	r21, 0x01	; 1
     42e:	d5 2e       	mov	r13, r21
            printf("odczytano %.3x: %d\r\n",addr,read_addr(addr));
     430:	61 e2       	ldi	r22, 0x21	; 33
     432:	66 2e       	mov	r6, r22
     434:	61 e0       	ldi	r22, 0x01	; 1
     436:	76 2e       	mov	r7, r22
     438:	07 c0       	rjmp	.+14     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
        }
        else if (command == 'w')
     43a:	87 37       	cpi	r24, 0x77	; 119
     43c:	09 f4       	brne	.+2      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     43e:	6d c0       	rjmp	.+218    	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
            printf("odczytano: %d, %d\r\n",addr, data);
            write_addr(addr, data);
            printf("zapisano %.3x: %d\r\n",addr,read_addr(addr));
        }

        printf("\r\n");
     440:	8f e0       	ldi	r24, 0x0F	; 15
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <puts>
    // zainicjalizuj I2C
    i2cInit();
    // program testowy
    char command;
    while(1) {
        printf("ready\r\n");
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	91 e0       	ldi	r25, 0x01	; 1
     44c:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <puts>
        scanf("%c",&command);
     450:	ff 92       	push	r15
     452:	ef 92       	push	r14
     454:	1f 93       	push	r17
     456:	0f 93       	push	r16
     458:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <scanf>
        if (command == 'r')
     45c:	8c 81       	ldd	r24, Y+4	; 0x04
     45e:	0f 90       	pop	r0
     460:	0f 90       	pop	r0
     462:	0f 90       	pop	r0
     464:	0f 90       	pop	r0
     466:	82 37       	cpi	r24, 0x72	; 114
     468:	41 f7       	brne	.-48     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
        {
            printf("read\r\n");
     46a:	8b e0       	ldi	r24, 0x0B	; 11
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <puts>
            uint16_t addr;
            scanf("%d",&addr);
     472:	9f 92       	push	r9
     474:	8f 92       	push	r8
     476:	bf 92       	push	r11
     478:	af 92       	push	r10
     47a:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <scanf>
            printf("odczytano: %d\r\n",addr);
     47e:	8a 81       	ldd	r24, Y+2	; 0x02
     480:	8f 93       	push	r24
     482:	89 81       	ldd	r24, Y+1	; 0x01
     484:	8f 93       	push	r24
     486:	df 92       	push	r13
     488:	cf 92       	push	r12
     48a:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <printf>
            printf("odczytano %.3x: %d\r\n",addr,read_addr(addr));
     48e:	99 81       	ldd	r25, Y+1	; 0x01
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     490:	40 92 bc 00 	sts	0x00BC, r4	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     49e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4a2:	87 ff       	sbrs	r24, 7
     4a4:	fc cf       	rjmp	.-8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     4a6:	20 92 bb 00 	sts	0x00BB, r2	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     4aa:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     4ae:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4b2:	87 ff       	sbrs	r24, 7
     4b4:	fc cf       	rjmp	.-8      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     4b6:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     4ba:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     4be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4c2:	87 ff       	sbrs	r24, 7
     4c4:	fc cf       	rjmp	.-8      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     4c6:	40 92 bc 00 	sts	0x00BC, r4	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     4ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4ce:	87 ff       	sbrs	r24, 7
     4d0:	fc cf       	rjmp	.-8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     4d2:	31 ea       	ldi	r19, 0xA1	; 161
     4d4:	30 93 bb 00 	sts	0x00BB, r19	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     4d8:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     4dc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4e0:	87 ff       	sbrs	r24, 7
     4e2:	fc cf       	rjmp	.-8      	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
  i2cWaitForComplete();
  return TWDR;
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     4e4:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     4e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4ec:	87 ff       	sbrs	r24, 7
     4ee:	fc cf       	rjmp	.-8      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
  return TWDR;
     4f0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     4f4:	30 92 bc 00 	sts	0x00BC, r3	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4f8:	1f 92       	push	r1
     4fa:	8f 93       	push	r24
     4fc:	8a 81       	ldd	r24, Y+2	; 0x02
     4fe:	8f 93       	push	r24
     500:	89 81       	ldd	r24, Y+1	; 0x01
     502:	8f 93       	push	r24
     504:	7f 92       	push	r7
     506:	6f 92       	push	r6
     508:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <printf>
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	93 cf       	rjmp	.-218    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
        }
        else if (command == 'w')
        {
            printf("write\r\n");
     51a:	86 e3       	ldi	r24, 0x36	; 54
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	0e 94 71 0d 	call	0x1ae2	; 0x1ae2 <puts>
            uint16_t addr;
            uint8_t data;
            scanf("%d %d",&addr, &data);
     522:	4e 81       	ldd	r20, Y+6	; 0x06
     524:	4f 93       	push	r20
     526:	5d 81       	ldd	r21, Y+5	; 0x05
     528:	5f 93       	push	r21
     52a:	9f 92       	push	r9
     52c:	8f 92       	push	r8
     52e:	8d e3       	ldi	r24, 0x3D	; 61
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	9f 93       	push	r25
     534:	8f 93       	push	r24
     536:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <scanf>
            printf("odczytano: %d, %d\r\n",addr, data);
     53a:	8b 81       	ldd	r24, Y+3	; 0x03
     53c:	1f 92       	push	r1
     53e:	8f 93       	push	r24
     540:	8a 81       	ldd	r24, Y+2	; 0x02
     542:	8f 93       	push	r24
     544:	89 81       	ldd	r24, Y+1	; 0x01
     546:	8f 93       	push	r24
     548:	43 e4       	ldi	r20, 0x43	; 67
     54a:	51 e0       	ldi	r21, 0x01	; 1
     54c:	5f 93       	push	r21
     54e:	4f 93       	push	r20
     550:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <printf>
            write_addr(addr, data);
     554:	9b 81       	ldd	r25, Y+3	; 0x03
     556:	29 81       	ldd	r18, Y+1	; 0x01
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     558:	40 92 bc 00 	sts	0x00BC, r4	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     55c:	0f b6       	in	r0, 0x3f	; 63
     55e:	f8 94       	cli
     560:	de bf       	out	0x3e, r29	; 62
     562:	0f be       	out	0x3f, r0	; 63
     564:	cd bf       	out	0x3d, r28	; 61
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     566:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     56a:	87 ff       	sbrs	r24, 7
     56c:	fc cf       	rjmp	.-8      	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     56e:	20 92 bb 00 	sts	0x00BB, r2	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     572:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     576:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     57a:	87 ff       	sbrs	r24, 7
     57c:	fc cf       	rjmp	.-8      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     57e:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     582:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     586:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     58a:	87 ff       	sbrs	r24, 7
     58c:	fc cf       	rjmp	.-8      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     58e:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     592:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     596:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     59a:	87 ff       	sbrs	r24, 7
     59c:	fc cf       	rjmp	.-8      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     59e:	30 92 bc 00 	sts	0x00BC, r3	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5a2:	8f e3       	ldi	r24, 0x3F	; 63
     5a4:	9c e9       	ldi	r25, 0x9C	; 156
     5a6:	01 97       	sbiw	r24, 0x01	; 1
     5a8:	f1 f7       	brne	.-4      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
     5aa:	00 c0       	rjmp	.+0      	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
     5ac:	00 00       	nop
            printf("zapisano %.3x: %d\r\n",addr,read_addr(addr));
     5ae:	99 81       	ldd	r25, Y+1	; 0x01
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     5b0:	40 92 bc 00 	sts	0x00BC, r4	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5b8:	87 ff       	sbrs	r24, 7
     5ba:	fc cf       	rjmp	.-8      	; 0x5b4 <__EEPROM_REGION_LENGTH__+0x1b4>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     5bc:	20 92 bb 00 	sts	0x00BB, r2	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     5c0:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5c4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5c8:	87 ff       	sbrs	r24, 7
     5ca:	fc cf       	rjmp	.-8      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     5cc:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     5d0:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5d4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5d8:	87 ff       	sbrs	r24, 7
     5da:	fc cf       	rjmp	.-8      	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
}
void i2cStart() {
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     5dc:	40 92 bc 00 	sts	0x00BC, r4	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5e0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5e4:	87 ff       	sbrs	r24, 7
     5e6:	fc cf       	rjmp	.-8      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
  i2cWaitForComplete();
  return TWDR;
}
void i2cSend(uint8_t data) {
  // wyślij dane
  TWDR = data;
     5e8:	91 ea       	ldi	r25, 0xA1	; 161
     5ea:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN);
     5ee:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5f2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5f6:	87 ff       	sbrs	r24, 7
     5f8:	fc cf       	rjmp	.-8      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
  i2cWaitForComplete();
  return TWDR;
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     5fa:	50 92 bc 00 	sts	0x00BC, r5	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  // uruchom TWI
  TWCR |= _BV(TWEN);
}
void i2cWaitForComplete() {
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
     5fe:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     602:	87 ff       	sbrs	r24, 7
     604:	fc cf       	rjmp	.-8      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
}
uint8_t i2cReadNoAck() {
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
  i2cWaitForComplete();
  return TWDR;
     606:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
  i2cWaitForComplete();
}
void i2cStop() {
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     60a:	30 92 bc 00 	sts	0x00BC, r3	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     60e:	1f 92       	push	r1
     610:	8f 93       	push	r24
     612:	8a 81       	ldd	r24, Y+2	; 0x02
     614:	8f 93       	push	r24
     616:	89 81       	ldd	r24, Y+1	; 0x01
     618:	8f 93       	push	r24
     61a:	27 e5       	ldi	r18, 0x57	; 87
     61c:	31 e0       	ldi	r19, 0x01	; 1
     61e:	3f 93       	push	r19
     620:	2f 93       	push	r18
     622:	0e 94 5b 0d 	call	0x1ab6	; 0x1ab6 <printf>
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	0f 90       	pop	r0
     62c:	0f 90       	pop	r0
     62e:	0f 90       	pop	r0
     630:	0f 90       	pop	r0
     632:	06 cf       	rjmp	.-500    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>

00000634 <vfprintf>:
     634:	a0 e1       	ldi	r26, 0x10	; 16
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	e0 e2       	ldi	r30, 0x20	; 32
     63a:	f3 e0       	ldi	r31, 0x03	; 3
     63c:	0c 94 a0 0b 	jmp	0x1740	; 0x1740 <__prologue_saves__>
     640:	7c 01       	movw	r14, r24
     642:	1b 01       	movw	r2, r22
     644:	6a 01       	movw	r12, r20
     646:	fc 01       	movw	r30, r24
     648:	17 82       	std	Z+7, r1	; 0x07
     64a:	16 82       	std	Z+6, r1	; 0x06
     64c:	83 81       	ldd	r24, Z+3	; 0x03
     64e:	81 ff       	sbrs	r24, 1
     650:	44 c3       	rjmp	.+1672   	; 0xcda <__stack+0x3db>
     652:	9e 01       	movw	r18, r28
     654:	2f 5f       	subi	r18, 0xFF	; 255
     656:	3f 4f       	sbci	r19, 0xFF	; 255
     658:	39 01       	movw	r6, r18
     65a:	f7 01       	movw	r30, r14
     65c:	93 81       	ldd	r25, Z+3	; 0x03
     65e:	f1 01       	movw	r30, r2
     660:	93 fd       	sbrc	r25, 3
     662:	85 91       	lpm	r24, Z+
     664:	93 ff       	sbrs	r25, 3
     666:	81 91       	ld	r24, Z+
     668:	1f 01       	movw	r2, r30
     66a:	88 23       	and	r24, r24
     66c:	09 f4       	brne	.+2      	; 0x670 <vfprintf+0x3c>
     66e:	31 c3       	rjmp	.+1634   	; 0xcd2 <__stack+0x3d3>
     670:	85 32       	cpi	r24, 0x25	; 37
     672:	39 f4       	brne	.+14     	; 0x682 <vfprintf+0x4e>
     674:	93 fd       	sbrc	r25, 3
     676:	85 91       	lpm	r24, Z+
     678:	93 ff       	sbrs	r25, 3
     67a:	81 91       	ld	r24, Z+
     67c:	1f 01       	movw	r2, r30
     67e:	85 32       	cpi	r24, 0x25	; 37
     680:	39 f4       	brne	.+14     	; 0x690 <vfprintf+0x5c>
     682:	b7 01       	movw	r22, r14
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     68a:	56 01       	movw	r10, r12
     68c:	65 01       	movw	r12, r10
     68e:	e5 cf       	rjmp	.-54     	; 0x65a <vfprintf+0x26>
     690:	10 e0       	ldi	r17, 0x00	; 0
     692:	51 2c       	mov	r5, r1
     694:	91 2c       	mov	r9, r1
     696:	ff e1       	ldi	r31, 0x1F	; 31
     698:	f9 15       	cp	r31, r9
     69a:	d8 f0       	brcs	.+54     	; 0x6d2 <vfprintf+0x9e>
     69c:	8b 32       	cpi	r24, 0x2B	; 43
     69e:	79 f0       	breq	.+30     	; 0x6be <vfprintf+0x8a>
     6a0:	38 f4       	brcc	.+14     	; 0x6b0 <vfprintf+0x7c>
     6a2:	80 32       	cpi	r24, 0x20	; 32
     6a4:	79 f0       	breq	.+30     	; 0x6c4 <vfprintf+0x90>
     6a6:	83 32       	cpi	r24, 0x23	; 35
     6a8:	a1 f4       	brne	.+40     	; 0x6d2 <vfprintf+0x9e>
     6aa:	f9 2d       	mov	r31, r9
     6ac:	f0 61       	ori	r31, 0x10	; 16
     6ae:	2e c0       	rjmp	.+92     	; 0x70c <vfprintf+0xd8>
     6b0:	8d 32       	cpi	r24, 0x2D	; 45
     6b2:	61 f0       	breq	.+24     	; 0x6cc <vfprintf+0x98>
     6b4:	80 33       	cpi	r24, 0x30	; 48
     6b6:	69 f4       	brne	.+26     	; 0x6d2 <vfprintf+0x9e>
     6b8:	29 2d       	mov	r18, r9
     6ba:	21 60       	ori	r18, 0x01	; 1
     6bc:	2d c0       	rjmp	.+90     	; 0x718 <vfprintf+0xe4>
     6be:	39 2d       	mov	r19, r9
     6c0:	32 60       	ori	r19, 0x02	; 2
     6c2:	93 2e       	mov	r9, r19
     6c4:	89 2d       	mov	r24, r9
     6c6:	84 60       	ori	r24, 0x04	; 4
     6c8:	98 2e       	mov	r9, r24
     6ca:	2a c0       	rjmp	.+84     	; 0x720 <vfprintf+0xec>
     6cc:	e9 2d       	mov	r30, r9
     6ce:	e8 60       	ori	r30, 0x08	; 8
     6d0:	15 c0       	rjmp	.+42     	; 0x6fc <vfprintf+0xc8>
     6d2:	97 fc       	sbrc	r9, 7
     6d4:	2d c0       	rjmp	.+90     	; 0x730 <vfprintf+0xfc>
     6d6:	20 ed       	ldi	r18, 0xD0	; 208
     6d8:	28 0f       	add	r18, r24
     6da:	2a 30       	cpi	r18, 0x0A	; 10
     6dc:	88 f4       	brcc	.+34     	; 0x700 <vfprintf+0xcc>
     6de:	96 fe       	sbrs	r9, 6
     6e0:	06 c0       	rjmp	.+12     	; 0x6ee <vfprintf+0xba>
     6e2:	3a e0       	ldi	r19, 0x0A	; 10
     6e4:	13 9f       	mul	r17, r19
     6e6:	20 0d       	add	r18, r0
     6e8:	11 24       	eor	r1, r1
     6ea:	12 2f       	mov	r17, r18
     6ec:	19 c0       	rjmp	.+50     	; 0x720 <vfprintf+0xec>
     6ee:	8a e0       	ldi	r24, 0x0A	; 10
     6f0:	58 9e       	mul	r5, r24
     6f2:	20 0d       	add	r18, r0
     6f4:	11 24       	eor	r1, r1
     6f6:	52 2e       	mov	r5, r18
     6f8:	e9 2d       	mov	r30, r9
     6fa:	e0 62       	ori	r30, 0x20	; 32
     6fc:	9e 2e       	mov	r9, r30
     6fe:	10 c0       	rjmp	.+32     	; 0x720 <vfprintf+0xec>
     700:	8e 32       	cpi	r24, 0x2E	; 46
     702:	31 f4       	brne	.+12     	; 0x710 <vfprintf+0xdc>
     704:	96 fc       	sbrc	r9, 6
     706:	e5 c2       	rjmp	.+1482   	; 0xcd2 <__stack+0x3d3>
     708:	f9 2d       	mov	r31, r9
     70a:	f0 64       	ori	r31, 0x40	; 64
     70c:	9f 2e       	mov	r9, r31
     70e:	08 c0       	rjmp	.+16     	; 0x720 <vfprintf+0xec>
     710:	8c 36       	cpi	r24, 0x6C	; 108
     712:	21 f4       	brne	.+8      	; 0x71c <vfprintf+0xe8>
     714:	29 2d       	mov	r18, r9
     716:	20 68       	ori	r18, 0x80	; 128
     718:	92 2e       	mov	r9, r18
     71a:	02 c0       	rjmp	.+4      	; 0x720 <vfprintf+0xec>
     71c:	88 36       	cpi	r24, 0x68	; 104
     71e:	41 f4       	brne	.+16     	; 0x730 <vfprintf+0xfc>
     720:	f1 01       	movw	r30, r2
     722:	93 fd       	sbrc	r25, 3
     724:	85 91       	lpm	r24, Z+
     726:	93 ff       	sbrs	r25, 3
     728:	81 91       	ld	r24, Z+
     72a:	1f 01       	movw	r2, r30
     72c:	81 11       	cpse	r24, r1
     72e:	b3 cf       	rjmp	.-154    	; 0x696 <vfprintf+0x62>
     730:	9b eb       	ldi	r25, 0xBB	; 187
     732:	98 0f       	add	r25, r24
     734:	93 30       	cpi	r25, 0x03	; 3
     736:	20 f4       	brcc	.+8      	; 0x740 <vfprintf+0x10c>
     738:	99 2d       	mov	r25, r9
     73a:	90 61       	ori	r25, 0x10	; 16
     73c:	80 5e       	subi	r24, 0xE0	; 224
     73e:	07 c0       	rjmp	.+14     	; 0x74e <vfprintf+0x11a>
     740:	9b e9       	ldi	r25, 0x9B	; 155
     742:	98 0f       	add	r25, r24
     744:	93 30       	cpi	r25, 0x03	; 3
     746:	08 f0       	brcs	.+2      	; 0x74a <vfprintf+0x116>
     748:	66 c1       	rjmp	.+716    	; 0xa16 <__stack+0x117>
     74a:	99 2d       	mov	r25, r9
     74c:	9f 7e       	andi	r25, 0xEF	; 239
     74e:	96 ff       	sbrs	r25, 6
     750:	16 e0       	ldi	r17, 0x06	; 6
     752:	9f 73       	andi	r25, 0x3F	; 63
     754:	99 2e       	mov	r9, r25
     756:	85 36       	cpi	r24, 0x65	; 101
     758:	19 f4       	brne	.+6      	; 0x760 <vfprintf+0x12c>
     75a:	90 64       	ori	r25, 0x40	; 64
     75c:	99 2e       	mov	r9, r25
     75e:	08 c0       	rjmp	.+16     	; 0x770 <vfprintf+0x13c>
     760:	86 36       	cpi	r24, 0x66	; 102
     762:	21 f4       	brne	.+8      	; 0x76c <vfprintf+0x138>
     764:	39 2f       	mov	r19, r25
     766:	30 68       	ori	r19, 0x80	; 128
     768:	93 2e       	mov	r9, r19
     76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0x13c>
     76c:	11 11       	cpse	r17, r1
     76e:	11 50       	subi	r17, 0x01	; 1
     770:	97 fe       	sbrs	r9, 7
     772:	07 c0       	rjmp	.+14     	; 0x782 <vfprintf+0x14e>
     774:	1c 33       	cpi	r17, 0x3C	; 60
     776:	50 f4       	brcc	.+20     	; 0x78c <vfprintf+0x158>
     778:	44 24       	eor	r4, r4
     77a:	43 94       	inc	r4
     77c:	41 0e       	add	r4, r17
     77e:	27 e0       	ldi	r18, 0x07	; 7
     780:	0b c0       	rjmp	.+22     	; 0x798 <vfprintf+0x164>
     782:	18 30       	cpi	r17, 0x08	; 8
     784:	38 f0       	brcs	.+14     	; 0x794 <vfprintf+0x160>
     786:	27 e0       	ldi	r18, 0x07	; 7
     788:	17 e0       	ldi	r17, 0x07	; 7
     78a:	05 c0       	rjmp	.+10     	; 0x796 <vfprintf+0x162>
     78c:	27 e0       	ldi	r18, 0x07	; 7
     78e:	9c e3       	ldi	r25, 0x3C	; 60
     790:	49 2e       	mov	r4, r25
     792:	02 c0       	rjmp	.+4      	; 0x798 <vfprintf+0x164>
     794:	21 2f       	mov	r18, r17
     796:	41 2c       	mov	r4, r1
     798:	56 01       	movw	r10, r12
     79a:	84 e0       	ldi	r24, 0x04	; 4
     79c:	a8 0e       	add	r10, r24
     79e:	b1 1c       	adc	r11, r1
     7a0:	f6 01       	movw	r30, r12
     7a2:	60 81       	ld	r22, Z
     7a4:	71 81       	ldd	r23, Z+1	; 0x01
     7a6:	82 81       	ldd	r24, Z+2	; 0x02
     7a8:	93 81       	ldd	r25, Z+3	; 0x03
     7aa:	04 2d       	mov	r16, r4
     7ac:	a3 01       	movw	r20, r6
     7ae:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__ftoa_engine>
     7b2:	6c 01       	movw	r12, r24
     7b4:	f9 81       	ldd	r31, Y+1	; 0x01
     7b6:	fc 87       	std	Y+12, r31	; 0x0c
     7b8:	f0 ff       	sbrs	r31, 0
     7ba:	02 c0       	rjmp	.+4      	; 0x7c0 <vfprintf+0x18c>
     7bc:	f3 ff       	sbrs	r31, 3
     7be:	06 c0       	rjmp	.+12     	; 0x7cc <vfprintf+0x198>
     7c0:	91 fc       	sbrc	r9, 1
     7c2:	06 c0       	rjmp	.+12     	; 0x7d0 <vfprintf+0x19c>
     7c4:	92 fe       	sbrs	r9, 2
     7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x1a0>
     7c8:	00 e2       	ldi	r16, 0x20	; 32
     7ca:	05 c0       	rjmp	.+10     	; 0x7d6 <vfprintf+0x1a2>
     7cc:	0d e2       	ldi	r16, 0x2D	; 45
     7ce:	03 c0       	rjmp	.+6      	; 0x7d6 <vfprintf+0x1a2>
     7d0:	0b e2       	ldi	r16, 0x2B	; 43
     7d2:	01 c0       	rjmp	.+2      	; 0x7d6 <vfprintf+0x1a2>
     7d4:	00 e0       	ldi	r16, 0x00	; 0
     7d6:	8c 85       	ldd	r24, Y+12	; 0x0c
     7d8:	8c 70       	andi	r24, 0x0C	; 12
     7da:	19 f0       	breq	.+6      	; 0x7e2 <vfprintf+0x1ae>
     7dc:	01 11       	cpse	r16, r1
     7de:	5a c2       	rjmp	.+1204   	; 0xc94 <__stack+0x395>
     7e0:	9b c2       	rjmp	.+1334   	; 0xd18 <__stack+0x419>
     7e2:	97 fe       	sbrs	r9, 7
     7e4:	10 c0       	rjmp	.+32     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7e6:	4c 0c       	add	r4, r12
     7e8:	fc 85       	ldd	r31, Y+12	; 0x0c
     7ea:	f4 ff       	sbrs	r31, 4
     7ec:	04 c0       	rjmp	.+8      	; 0x7f6 <vfprintf+0x1c2>
     7ee:	8a 81       	ldd	r24, Y+2	; 0x02
     7f0:	81 33       	cpi	r24, 0x31	; 49
     7f2:	09 f4       	brne	.+2      	; 0x7f6 <vfprintf+0x1c2>
     7f4:	4a 94       	dec	r4
     7f6:	14 14       	cp	r1, r4
     7f8:	74 f5       	brge	.+92     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     7fa:	28 e0       	ldi	r18, 0x08	; 8
     7fc:	24 15       	cp	r18, r4
     7fe:	78 f5       	brcc	.+94     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     800:	88 e0       	ldi	r24, 0x08	; 8
     802:	48 2e       	mov	r4, r24
     804:	2c c0       	rjmp	.+88     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     806:	96 fc       	sbrc	r9, 6
     808:	2a c0       	rjmp	.+84     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     80a:	81 2f       	mov	r24, r17
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	8c 15       	cp	r24, r12
     810:	9d 05       	cpc	r25, r13
     812:	9c f0       	brlt	.+38     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     814:	3c ef       	ldi	r19, 0xFC	; 252
     816:	c3 16       	cp	r12, r19
     818:	3f ef       	ldi	r19, 0xFF	; 255
     81a:	d3 06       	cpc	r13, r19
     81c:	74 f0       	brlt	.+28     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     81e:	89 2d       	mov	r24, r9
     820:	80 68       	ori	r24, 0x80	; 128
     822:	98 2e       	mov	r9, r24
     824:	0a c0       	rjmp	.+20     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     826:	e2 e0       	ldi	r30, 0x02	; 2
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	ec 0f       	add	r30, r28
     82c:	fd 1f       	adc	r31, r29
     82e:	e1 0f       	add	r30, r17
     830:	f1 1d       	adc	r31, r1
     832:	80 81       	ld	r24, Z
     834:	80 33       	cpi	r24, 0x30	; 48
     836:	19 f4       	brne	.+6      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     838:	11 50       	subi	r17, 0x01	; 1
     83a:	11 11       	cpse	r17, r1
     83c:	f4 cf       	rjmp	.-24     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     83e:	97 fe       	sbrs	r9, 7
     840:	0e c0       	rjmp	.+28     	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     842:	44 24       	eor	r4, r4
     844:	43 94       	inc	r4
     846:	41 0e       	add	r4, r17
     848:	81 2f       	mov	r24, r17
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	c8 16       	cp	r12, r24
     84e:	d9 06       	cpc	r13, r25
     850:	2c f4       	brge	.+10     	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     852:	1c 19       	sub	r17, r12
     854:	04 c0       	rjmp	.+8      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     856:	44 24       	eor	r4, r4
     858:	43 94       	inc	r4
     85a:	01 c0       	rjmp	.+2      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     85c:	10 e0       	ldi	r17, 0x00	; 0
     85e:	97 fe       	sbrs	r9, 7
     860:	06 c0       	rjmp	.+12     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
     862:	1c 14       	cp	r1, r12
     864:	1d 04       	cpc	r1, r13
     866:	34 f4       	brge	.+12     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
     868:	c6 01       	movw	r24, r12
     86a:	01 96       	adiw	r24, 0x01	; 1
     86c:	05 c0       	rjmp	.+10     	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     86e:	85 e0       	ldi	r24, 0x05	; 5
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	02 c0       	rjmp	.+4      	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	01 11       	cpse	r16, r1
     87a:	01 96       	adiw	r24, 0x01	; 1
     87c:	11 23       	and	r17, r17
     87e:	31 f0       	breq	.+12     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     880:	21 2f       	mov	r18, r17
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	2f 5f       	subi	r18, 0xFF	; 255
     886:	3f 4f       	sbci	r19, 0xFF	; 255
     888:	82 0f       	add	r24, r18
     88a:	93 1f       	adc	r25, r19
     88c:	25 2d       	mov	r18, r5
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	82 17       	cp	r24, r18
     892:	93 07       	cpc	r25, r19
     894:	14 f4       	brge	.+4      	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
     896:	58 1a       	sub	r5, r24
     898:	01 c0       	rjmp	.+2      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     89a:	51 2c       	mov	r5, r1
     89c:	89 2d       	mov	r24, r9
     89e:	89 70       	andi	r24, 0x09	; 9
     8a0:	49 f4       	brne	.+18     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8a2:	55 20       	and	r5, r5
     8a4:	39 f0       	breq	.+14     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8a6:	b7 01       	movw	r22, r14
     8a8:	80 e2       	ldi	r24, 0x20	; 32
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     8b0:	5a 94       	dec	r5
     8b2:	f7 cf       	rjmp	.-18     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
     8b4:	00 23       	and	r16, r16
     8b6:	29 f0       	breq	.+10     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
     8b8:	b7 01       	movw	r22, r14
     8ba:	80 2f       	mov	r24, r16
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     8c2:	93 fc       	sbrc	r9, 3
     8c4:	09 c0       	rjmp	.+18     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8c6:	55 20       	and	r5, r5
     8c8:	39 f0       	breq	.+14     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8ca:	b7 01       	movw	r22, r14
     8cc:	80 e3       	ldi	r24, 0x30	; 48
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     8d4:	5a 94       	dec	r5
     8d6:	f7 cf       	rjmp	.-18     	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
     8d8:	97 fe       	sbrs	r9, 7
     8da:	4c c0       	rjmp	.+152    	; 0x974 <__stack+0x75>
     8dc:	46 01       	movw	r8, r12
     8de:	d7 fe       	sbrs	r13, 7
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     8e2:	81 2c       	mov	r8, r1
     8e4:	91 2c       	mov	r9, r1
     8e6:	c6 01       	movw	r24, r12
     8e8:	88 19       	sub	r24, r8
     8ea:	99 09       	sbc	r25, r9
     8ec:	f3 01       	movw	r30, r6
     8ee:	e8 0f       	add	r30, r24
     8f0:	f9 1f       	adc	r31, r25
     8f2:	fe 87       	std	Y+14, r31	; 0x0e
     8f4:	ed 87       	std	Y+13, r30	; 0x0d
     8f6:	96 01       	movw	r18, r12
     8f8:	24 19       	sub	r18, r4
     8fa:	31 09       	sbc	r19, r1
     8fc:	38 8b       	std	Y+16, r19	; 0x10
     8fe:	2f 87       	std	Y+15, r18	; 0x0f
     900:	01 2f       	mov	r16, r17
     902:	10 e0       	ldi	r17, 0x00	; 0
     904:	11 95       	neg	r17
     906:	01 95       	neg	r16
     908:	11 09       	sbc	r17, r1
     90a:	3f ef       	ldi	r19, 0xFF	; 255
     90c:	83 16       	cp	r8, r19
     90e:	93 06       	cpc	r9, r19
     910:	29 f4       	brne	.+10     	; 0x91c <__stack+0x1d>
     912:	b7 01       	movw	r22, r14
     914:	8e e2       	ldi	r24, 0x2E	; 46
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     91c:	c8 14       	cp	r12, r8
     91e:	d9 04       	cpc	r13, r9
     920:	4c f0       	brlt	.+18     	; 0x934 <__stack+0x35>
     922:	8f 85       	ldd	r24, Y+15	; 0x0f
     924:	98 89       	ldd	r25, Y+16	; 0x10
     926:	88 15       	cp	r24, r8
     928:	99 05       	cpc	r25, r9
     92a:	24 f4       	brge	.+8      	; 0x934 <__stack+0x35>
     92c:	ed 85       	ldd	r30, Y+13	; 0x0d
     92e:	fe 85       	ldd	r31, Y+14	; 0x0e
     930:	81 81       	ldd	r24, Z+1	; 0x01
     932:	01 c0       	rjmp	.+2      	; 0x936 <__stack+0x37>
     934:	80 e3       	ldi	r24, 0x30	; 48
     936:	f1 e0       	ldi	r31, 0x01	; 1
     938:	8f 1a       	sub	r8, r31
     93a:	91 08       	sbc	r9, r1
     93c:	2d 85       	ldd	r18, Y+13	; 0x0d
     93e:	3e 85       	ldd	r19, Y+14	; 0x0e
     940:	2f 5f       	subi	r18, 0xFF	; 255
     942:	3f 4f       	sbci	r19, 0xFF	; 255
     944:	3e 87       	std	Y+14, r19	; 0x0e
     946:	2d 87       	std	Y+13, r18	; 0x0d
     948:	80 16       	cp	r8, r16
     94a:	91 06       	cpc	r9, r17
     94c:	2c f0       	brlt	.+10     	; 0x958 <__stack+0x59>
     94e:	b7 01       	movw	r22, r14
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     956:	d9 cf       	rjmp	.-78     	; 0x90a <__stack+0xb>
     958:	c8 14       	cp	r12, r8
     95a:	d9 04       	cpc	r13, r9
     95c:	41 f4       	brne	.+16     	; 0x96e <__stack+0x6f>
     95e:	9a 81       	ldd	r25, Y+2	; 0x02
     960:	96 33       	cpi	r25, 0x36	; 54
     962:	20 f4       	brcc	.+8      	; 0x96c <__stack+0x6d>
     964:	95 33       	cpi	r25, 0x35	; 53
     966:	19 f4       	brne	.+6      	; 0x96e <__stack+0x6f>
     968:	3c 85       	ldd	r19, Y+12	; 0x0c
     96a:	34 ff       	sbrs	r19, 4
     96c:	81 e3       	ldi	r24, 0x31	; 49
     96e:	b7 01       	movw	r22, r14
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	4e c0       	rjmp	.+156    	; 0xa10 <__stack+0x111>
     974:	8a 81       	ldd	r24, Y+2	; 0x02
     976:	81 33       	cpi	r24, 0x31	; 49
     978:	19 f0       	breq	.+6      	; 0x980 <__stack+0x81>
     97a:	9c 85       	ldd	r25, Y+12	; 0x0c
     97c:	9f 7e       	andi	r25, 0xEF	; 239
     97e:	9c 87       	std	Y+12, r25	; 0x0c
     980:	b7 01       	movw	r22, r14
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     988:	11 11       	cpse	r17, r1
     98a:	05 c0       	rjmp	.+10     	; 0x996 <__stack+0x97>
     98c:	94 fc       	sbrc	r9, 4
     98e:	18 c0       	rjmp	.+48     	; 0x9c0 <__stack+0xc1>
     990:	85 e6       	ldi	r24, 0x65	; 101
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	17 c0       	rjmp	.+46     	; 0x9c4 <__stack+0xc5>
     996:	b7 01       	movw	r22, r14
     998:	8e e2       	ldi	r24, 0x2E	; 46
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     9a0:	1e 5f       	subi	r17, 0xFE	; 254
     9a2:	82 e0       	ldi	r24, 0x02	; 2
     9a4:	01 e0       	ldi	r16, 0x01	; 1
     9a6:	08 0f       	add	r16, r24
     9a8:	f3 01       	movw	r30, r6
     9aa:	e8 0f       	add	r30, r24
     9ac:	f1 1d       	adc	r31, r1
     9ae:	80 81       	ld	r24, Z
     9b0:	b7 01       	movw	r22, r14
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     9b8:	80 2f       	mov	r24, r16
     9ba:	01 13       	cpse	r16, r17
     9bc:	f3 cf       	rjmp	.-26     	; 0x9a4 <__stack+0xa5>
     9be:	e6 cf       	rjmp	.-52     	; 0x98c <__stack+0x8d>
     9c0:	85 e4       	ldi	r24, 0x45	; 69
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	b7 01       	movw	r22, r14
     9c6:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     9ca:	d7 fc       	sbrc	r13, 7
     9cc:	06 c0       	rjmp	.+12     	; 0x9da <__stack+0xdb>
     9ce:	c1 14       	cp	r12, r1
     9d0:	d1 04       	cpc	r13, r1
     9d2:	41 f4       	brne	.+16     	; 0x9e4 <__stack+0xe5>
     9d4:	ec 85       	ldd	r30, Y+12	; 0x0c
     9d6:	e4 ff       	sbrs	r30, 4
     9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <__stack+0xe5>
     9da:	d1 94       	neg	r13
     9dc:	c1 94       	neg	r12
     9de:	d1 08       	sbc	r13, r1
     9e0:	8d e2       	ldi	r24, 0x2D	; 45
     9e2:	01 c0       	rjmp	.+2      	; 0x9e6 <__stack+0xe7>
     9e4:	8b e2       	ldi	r24, 0x2B	; 43
     9e6:	b7 01       	movw	r22, r14
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     9ee:	80 e3       	ldi	r24, 0x30	; 48
     9f0:	2a e0       	ldi	r18, 0x0A	; 10
     9f2:	c2 16       	cp	r12, r18
     9f4:	d1 04       	cpc	r13, r1
     9f6:	2c f0       	brlt	.+10     	; 0xa02 <__stack+0x103>
     9f8:	8f 5f       	subi	r24, 0xFF	; 255
     9fa:	fa e0       	ldi	r31, 0x0A	; 10
     9fc:	cf 1a       	sub	r12, r31
     9fe:	d1 08       	sbc	r13, r1
     a00:	f7 cf       	rjmp	.-18     	; 0x9f0 <__stack+0xf1>
     a02:	b7 01       	movw	r22, r14
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     a0a:	b7 01       	movw	r22, r14
     a0c:	c6 01       	movw	r24, r12
     a0e:	c0 96       	adiw	r24, 0x30	; 48
     a10:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     a14:	54 c1       	rjmp	.+680    	; 0xcbe <__stack+0x3bf>
     a16:	83 36       	cpi	r24, 0x63	; 99
     a18:	31 f0       	breq	.+12     	; 0xa26 <__stack+0x127>
     a1a:	83 37       	cpi	r24, 0x73	; 115
     a1c:	79 f0       	breq	.+30     	; 0xa3c <__stack+0x13d>
     a1e:	83 35       	cpi	r24, 0x53	; 83
     a20:	09 f0       	breq	.+2      	; 0xa24 <__stack+0x125>
     a22:	56 c0       	rjmp	.+172    	; 0xad0 <__stack+0x1d1>
     a24:	20 c0       	rjmp	.+64     	; 0xa66 <__stack+0x167>
     a26:	56 01       	movw	r10, r12
     a28:	32 e0       	ldi	r19, 0x02	; 2
     a2a:	a3 0e       	add	r10, r19
     a2c:	b1 1c       	adc	r11, r1
     a2e:	f6 01       	movw	r30, r12
     a30:	80 81       	ld	r24, Z
     a32:	89 83       	std	Y+1, r24	; 0x01
     a34:	01 e0       	ldi	r16, 0x01	; 1
     a36:	10 e0       	ldi	r17, 0x00	; 0
     a38:	63 01       	movw	r12, r6
     a3a:	12 c0       	rjmp	.+36     	; 0xa60 <__stack+0x161>
     a3c:	56 01       	movw	r10, r12
     a3e:	f2 e0       	ldi	r31, 0x02	; 2
     a40:	af 0e       	add	r10, r31
     a42:	b1 1c       	adc	r11, r1
     a44:	f6 01       	movw	r30, r12
     a46:	c0 80       	ld	r12, Z
     a48:	d1 80       	ldd	r13, Z+1	; 0x01
     a4a:	96 fe       	sbrs	r9, 6
     a4c:	03 c0       	rjmp	.+6      	; 0xa54 <__stack+0x155>
     a4e:	61 2f       	mov	r22, r17
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	02 c0       	rjmp	.+4      	; 0xa58 <__stack+0x159>
     a54:	6f ef       	ldi	r22, 0xFF	; 255
     a56:	7f ef       	ldi	r23, 0xFF	; 255
     a58:	c6 01       	movw	r24, r12
     a5a:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <strnlen>
     a5e:	8c 01       	movw	r16, r24
     a60:	f9 2d       	mov	r31, r9
     a62:	ff 77       	andi	r31, 0x7F	; 127
     a64:	14 c0       	rjmp	.+40     	; 0xa8e <__stack+0x18f>
     a66:	56 01       	movw	r10, r12
     a68:	22 e0       	ldi	r18, 0x02	; 2
     a6a:	a2 0e       	add	r10, r18
     a6c:	b1 1c       	adc	r11, r1
     a6e:	f6 01       	movw	r30, r12
     a70:	c0 80       	ld	r12, Z
     a72:	d1 80       	ldd	r13, Z+1	; 0x01
     a74:	96 fe       	sbrs	r9, 6
     a76:	03 c0       	rjmp	.+6      	; 0xa7e <__stack+0x17f>
     a78:	61 2f       	mov	r22, r17
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	02 c0       	rjmp	.+4      	; 0xa82 <__stack+0x183>
     a7e:	6f ef       	ldi	r22, 0xFF	; 255
     a80:	7f ef       	ldi	r23, 0xFF	; 255
     a82:	c6 01       	movw	r24, r12
     a84:	0e 94 cb 0c 	call	0x1996	; 0x1996 <strnlen_P>
     a88:	8c 01       	movw	r16, r24
     a8a:	f9 2d       	mov	r31, r9
     a8c:	f0 68       	ori	r31, 0x80	; 128
     a8e:	9f 2e       	mov	r9, r31
     a90:	f3 fd       	sbrc	r31, 3
     a92:	1a c0       	rjmp	.+52     	; 0xac8 <__stack+0x1c9>
     a94:	85 2d       	mov	r24, r5
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	08 17       	cp	r16, r24
     a9a:	19 07       	cpc	r17, r25
     a9c:	a8 f4       	brcc	.+42     	; 0xac8 <__stack+0x1c9>
     a9e:	b7 01       	movw	r22, r14
     aa0:	80 e2       	ldi	r24, 0x20	; 32
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     aa8:	5a 94       	dec	r5
     aaa:	f4 cf       	rjmp	.-24     	; 0xa94 <__stack+0x195>
     aac:	f6 01       	movw	r30, r12
     aae:	97 fc       	sbrc	r9, 7
     ab0:	85 91       	lpm	r24, Z+
     ab2:	97 fe       	sbrs	r9, 7
     ab4:	81 91       	ld	r24, Z+
     ab6:	6f 01       	movw	r12, r30
     ab8:	b7 01       	movw	r22, r14
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     ac0:	51 10       	cpse	r5, r1
     ac2:	5a 94       	dec	r5
     ac4:	01 50       	subi	r16, 0x01	; 1
     ac6:	11 09       	sbc	r17, r1
     ac8:	01 15       	cp	r16, r1
     aca:	11 05       	cpc	r17, r1
     acc:	79 f7       	brne	.-34     	; 0xaac <__stack+0x1ad>
     ace:	f7 c0       	rjmp	.+494    	; 0xcbe <__stack+0x3bf>
     ad0:	84 36       	cpi	r24, 0x64	; 100
     ad2:	11 f0       	breq	.+4      	; 0xad8 <__stack+0x1d9>
     ad4:	89 36       	cpi	r24, 0x69	; 105
     ad6:	61 f5       	brne	.+88     	; 0xb30 <__stack+0x231>
     ad8:	56 01       	movw	r10, r12
     ada:	97 fe       	sbrs	r9, 7
     adc:	09 c0       	rjmp	.+18     	; 0xaf0 <__stack+0x1f1>
     ade:	24 e0       	ldi	r18, 0x04	; 4
     ae0:	a2 0e       	add	r10, r18
     ae2:	b1 1c       	adc	r11, r1
     ae4:	f6 01       	movw	r30, r12
     ae6:	60 81       	ld	r22, Z
     ae8:	71 81       	ldd	r23, Z+1	; 0x01
     aea:	82 81       	ldd	r24, Z+2	; 0x02
     aec:	93 81       	ldd	r25, Z+3	; 0x03
     aee:	0a c0       	rjmp	.+20     	; 0xb04 <__stack+0x205>
     af0:	f2 e0       	ldi	r31, 0x02	; 2
     af2:	af 0e       	add	r10, r31
     af4:	b1 1c       	adc	r11, r1
     af6:	f6 01       	movw	r30, r12
     af8:	60 81       	ld	r22, Z
     afa:	71 81       	ldd	r23, Z+1	; 0x01
     afc:	07 2e       	mov	r0, r23
     afe:	00 0c       	add	r0, r0
     b00:	88 0b       	sbc	r24, r24
     b02:	99 0b       	sbc	r25, r25
     b04:	f9 2d       	mov	r31, r9
     b06:	ff 76       	andi	r31, 0x6F	; 111
     b08:	9f 2e       	mov	r9, r31
     b0a:	97 ff       	sbrs	r25, 7
     b0c:	09 c0       	rjmp	.+18     	; 0xb20 <__stack+0x221>
     b0e:	90 95       	com	r25
     b10:	80 95       	com	r24
     b12:	70 95       	com	r23
     b14:	61 95       	neg	r22
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	8f 4f       	sbci	r24, 0xFF	; 255
     b1a:	9f 4f       	sbci	r25, 0xFF	; 255
     b1c:	f0 68       	ori	r31, 0x80	; 128
     b1e:	9f 2e       	mov	r9, r31
     b20:	2a e0       	ldi	r18, 0x0A	; 10
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	a3 01       	movw	r20, r6
     b26:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <__ultoa_invert>
     b2a:	c8 2e       	mov	r12, r24
     b2c:	c6 18       	sub	r12, r6
     b2e:	3f c0       	rjmp	.+126    	; 0xbae <__stack+0x2af>
     b30:	09 2d       	mov	r16, r9
     b32:	85 37       	cpi	r24, 0x75	; 117
     b34:	21 f4       	brne	.+8      	; 0xb3e <__stack+0x23f>
     b36:	0f 7e       	andi	r16, 0xEF	; 239
     b38:	2a e0       	ldi	r18, 0x0A	; 10
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	1d c0       	rjmp	.+58     	; 0xb78 <__stack+0x279>
     b3e:	09 7f       	andi	r16, 0xF9	; 249
     b40:	8f 36       	cpi	r24, 0x6F	; 111
     b42:	91 f0       	breq	.+36     	; 0xb68 <__stack+0x269>
     b44:	18 f4       	brcc	.+6      	; 0xb4c <__stack+0x24d>
     b46:	88 35       	cpi	r24, 0x58	; 88
     b48:	59 f0       	breq	.+22     	; 0xb60 <__stack+0x261>
     b4a:	c3 c0       	rjmp	.+390    	; 0xcd2 <__stack+0x3d3>
     b4c:	80 37       	cpi	r24, 0x70	; 112
     b4e:	19 f0       	breq	.+6      	; 0xb56 <__stack+0x257>
     b50:	88 37       	cpi	r24, 0x78	; 120
     b52:	11 f0       	breq	.+4      	; 0xb58 <__stack+0x259>
     b54:	be c0       	rjmp	.+380    	; 0xcd2 <__stack+0x3d3>
     b56:	00 61       	ori	r16, 0x10	; 16
     b58:	04 ff       	sbrs	r16, 4
     b5a:	09 c0       	rjmp	.+18     	; 0xb6e <__stack+0x26f>
     b5c:	04 60       	ori	r16, 0x04	; 4
     b5e:	07 c0       	rjmp	.+14     	; 0xb6e <__stack+0x26f>
     b60:	94 fe       	sbrs	r9, 4
     b62:	08 c0       	rjmp	.+16     	; 0xb74 <__stack+0x275>
     b64:	06 60       	ori	r16, 0x06	; 6
     b66:	06 c0       	rjmp	.+12     	; 0xb74 <__stack+0x275>
     b68:	28 e0       	ldi	r18, 0x08	; 8
     b6a:	30 e0       	ldi	r19, 0x00	; 0
     b6c:	05 c0       	rjmp	.+10     	; 0xb78 <__stack+0x279>
     b6e:	20 e1       	ldi	r18, 0x10	; 16
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <__stack+0x279>
     b74:	20 e1       	ldi	r18, 0x10	; 16
     b76:	32 e0       	ldi	r19, 0x02	; 2
     b78:	56 01       	movw	r10, r12
     b7a:	07 ff       	sbrs	r16, 7
     b7c:	09 c0       	rjmp	.+18     	; 0xb90 <__stack+0x291>
     b7e:	84 e0       	ldi	r24, 0x04	; 4
     b80:	a8 0e       	add	r10, r24
     b82:	b1 1c       	adc	r11, r1
     b84:	f6 01       	movw	r30, r12
     b86:	60 81       	ld	r22, Z
     b88:	71 81       	ldd	r23, Z+1	; 0x01
     b8a:	82 81       	ldd	r24, Z+2	; 0x02
     b8c:	93 81       	ldd	r25, Z+3	; 0x03
     b8e:	08 c0       	rjmp	.+16     	; 0xba0 <__stack+0x2a1>
     b90:	f2 e0       	ldi	r31, 0x02	; 2
     b92:	af 0e       	add	r10, r31
     b94:	b1 1c       	adc	r11, r1
     b96:	f6 01       	movw	r30, r12
     b98:	60 81       	ld	r22, Z
     b9a:	71 81       	ldd	r23, Z+1	; 0x01
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	a3 01       	movw	r20, r6
     ba2:	0e 94 d0 0d 	call	0x1ba0	; 0x1ba0 <__ultoa_invert>
     ba6:	c8 2e       	mov	r12, r24
     ba8:	c6 18       	sub	r12, r6
     baa:	0f 77       	andi	r16, 0x7F	; 127
     bac:	90 2e       	mov	r9, r16
     bae:	96 fe       	sbrs	r9, 6
     bb0:	0b c0       	rjmp	.+22     	; 0xbc8 <__stack+0x2c9>
     bb2:	09 2d       	mov	r16, r9
     bb4:	0e 7f       	andi	r16, 0xFE	; 254
     bb6:	c1 16       	cp	r12, r17
     bb8:	50 f4       	brcc	.+20     	; 0xbce <__stack+0x2cf>
     bba:	94 fe       	sbrs	r9, 4
     bbc:	0a c0       	rjmp	.+20     	; 0xbd2 <__stack+0x2d3>
     bbe:	92 fc       	sbrc	r9, 2
     bc0:	08 c0       	rjmp	.+16     	; 0xbd2 <__stack+0x2d3>
     bc2:	09 2d       	mov	r16, r9
     bc4:	0e 7e       	andi	r16, 0xEE	; 238
     bc6:	05 c0       	rjmp	.+10     	; 0xbd2 <__stack+0x2d3>
     bc8:	dc 2c       	mov	r13, r12
     bca:	09 2d       	mov	r16, r9
     bcc:	03 c0       	rjmp	.+6      	; 0xbd4 <__stack+0x2d5>
     bce:	dc 2c       	mov	r13, r12
     bd0:	01 c0       	rjmp	.+2      	; 0xbd4 <__stack+0x2d5>
     bd2:	d1 2e       	mov	r13, r17
     bd4:	04 ff       	sbrs	r16, 4
     bd6:	0d c0       	rjmp	.+26     	; 0xbf2 <__stack+0x2f3>
     bd8:	fe 01       	movw	r30, r28
     bda:	ec 0d       	add	r30, r12
     bdc:	f1 1d       	adc	r31, r1
     bde:	80 81       	ld	r24, Z
     be0:	80 33       	cpi	r24, 0x30	; 48
     be2:	11 f4       	brne	.+4      	; 0xbe8 <__stack+0x2e9>
     be4:	09 7e       	andi	r16, 0xE9	; 233
     be6:	09 c0       	rjmp	.+18     	; 0xbfa <__stack+0x2fb>
     be8:	02 ff       	sbrs	r16, 2
     bea:	06 c0       	rjmp	.+12     	; 0xbf8 <__stack+0x2f9>
     bec:	d3 94       	inc	r13
     bee:	d3 94       	inc	r13
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__stack+0x2fb>
     bf2:	80 2f       	mov	r24, r16
     bf4:	86 78       	andi	r24, 0x86	; 134
     bf6:	09 f0       	breq	.+2      	; 0xbfa <__stack+0x2fb>
     bf8:	d3 94       	inc	r13
     bfa:	03 fd       	sbrc	r16, 3
     bfc:	11 c0       	rjmp	.+34     	; 0xc20 <__stack+0x321>
     bfe:	00 ff       	sbrs	r16, 0
     c00:	06 c0       	rjmp	.+12     	; 0xc0e <__stack+0x30f>
     c02:	1c 2d       	mov	r17, r12
     c04:	d5 14       	cp	r13, r5
     c06:	80 f4       	brcc	.+32     	; 0xc28 <__stack+0x329>
     c08:	15 0d       	add	r17, r5
     c0a:	1d 19       	sub	r17, r13
     c0c:	0d c0       	rjmp	.+26     	; 0xc28 <__stack+0x329>
     c0e:	d5 14       	cp	r13, r5
     c10:	58 f4       	brcc	.+22     	; 0xc28 <__stack+0x329>
     c12:	b7 01       	movw	r22, r14
     c14:	80 e2       	ldi	r24, 0x20	; 32
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     c1c:	d3 94       	inc	r13
     c1e:	f7 cf       	rjmp	.-18     	; 0xc0e <__stack+0x30f>
     c20:	d5 14       	cp	r13, r5
     c22:	10 f4       	brcc	.+4      	; 0xc28 <__stack+0x329>
     c24:	5d 18       	sub	r5, r13
     c26:	01 c0       	rjmp	.+2      	; 0xc2a <__stack+0x32b>
     c28:	51 2c       	mov	r5, r1
     c2a:	04 ff       	sbrs	r16, 4
     c2c:	10 c0       	rjmp	.+32     	; 0xc4e <__stack+0x34f>
     c2e:	b7 01       	movw	r22, r14
     c30:	80 e3       	ldi	r24, 0x30	; 48
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     c38:	02 ff       	sbrs	r16, 2
     c3a:	17 c0       	rjmp	.+46     	; 0xc6a <__stack+0x36b>
     c3c:	01 fd       	sbrc	r16, 1
     c3e:	03 c0       	rjmp	.+6      	; 0xc46 <__stack+0x347>
     c40:	88 e7       	ldi	r24, 0x78	; 120
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	02 c0       	rjmp	.+4      	; 0xc4a <__stack+0x34b>
     c46:	88 e5       	ldi	r24, 0x58	; 88
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	b7 01       	movw	r22, r14
     c4c:	0c c0       	rjmp	.+24     	; 0xc66 <__stack+0x367>
     c4e:	80 2f       	mov	r24, r16
     c50:	86 78       	andi	r24, 0x86	; 134
     c52:	59 f0       	breq	.+22     	; 0xc6a <__stack+0x36b>
     c54:	01 ff       	sbrs	r16, 1
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <__stack+0x35d>
     c58:	8b e2       	ldi	r24, 0x2B	; 43
     c5a:	01 c0       	rjmp	.+2      	; 0xc5e <__stack+0x35f>
     c5c:	80 e2       	ldi	r24, 0x20	; 32
     c5e:	07 fd       	sbrc	r16, 7
     c60:	8d e2       	ldi	r24, 0x2D	; 45
     c62:	b7 01       	movw	r22, r14
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     c6a:	c1 16       	cp	r12, r17
     c6c:	38 f4       	brcc	.+14     	; 0xc7c <__stack+0x37d>
     c6e:	b7 01       	movw	r22, r14
     c70:	80 e3       	ldi	r24, 0x30	; 48
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     c78:	11 50       	subi	r17, 0x01	; 1
     c7a:	f7 cf       	rjmp	.-18     	; 0xc6a <__stack+0x36b>
     c7c:	ca 94       	dec	r12
     c7e:	f3 01       	movw	r30, r6
     c80:	ec 0d       	add	r30, r12
     c82:	f1 1d       	adc	r31, r1
     c84:	80 81       	ld	r24, Z
     c86:	b7 01       	movw	r22, r14
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     c8e:	c1 10       	cpse	r12, r1
     c90:	f5 cf       	rjmp	.-22     	; 0xc7c <__stack+0x37d>
     c92:	15 c0       	rjmp	.+42     	; 0xcbe <__stack+0x3bf>
     c94:	f4 e0       	ldi	r31, 0x04	; 4
     c96:	f5 15       	cp	r31, r5
     c98:	60 f5       	brcc	.+88     	; 0xcf2 <__stack+0x3f3>
     c9a:	84 e0       	ldi	r24, 0x04	; 4
     c9c:	58 1a       	sub	r5, r24
     c9e:	93 fe       	sbrs	r9, 3
     ca0:	1f c0       	rjmp	.+62     	; 0xce0 <__stack+0x3e1>
     ca2:	01 11       	cpse	r16, r1
     ca4:	27 c0       	rjmp	.+78     	; 0xcf4 <__stack+0x3f5>
     ca6:	2c 85       	ldd	r18, Y+12	; 0x0c
     ca8:	23 ff       	sbrs	r18, 3
     caa:	2a c0       	rjmp	.+84     	; 0xd00 <__stack+0x401>
     cac:	08 e6       	ldi	r16, 0x68	; 104
     cae:	10 e0       	ldi	r17, 0x00	; 0
     cb0:	39 2d       	mov	r19, r9
     cb2:	30 71       	andi	r19, 0x10	; 16
     cb4:	93 2e       	mov	r9, r19
     cb6:	f8 01       	movw	r30, r16
     cb8:	84 91       	lpm	r24, Z
     cba:	81 11       	cpse	r24, r1
     cbc:	24 c0       	rjmp	.+72     	; 0xd06 <__stack+0x407>
     cbe:	55 20       	and	r5, r5
     cc0:	09 f4       	brne	.+2      	; 0xcc4 <__stack+0x3c5>
     cc2:	e4 cc       	rjmp	.-1592   	; 0x68c <vfprintf+0x58>
     cc4:	b7 01       	movw	r22, r14
     cc6:	80 e2       	ldi	r24, 0x20	; 32
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     cce:	5a 94       	dec	r5
     cd0:	f6 cf       	rjmp	.-20     	; 0xcbe <__stack+0x3bf>
     cd2:	f7 01       	movw	r30, r14
     cd4:	86 81       	ldd	r24, Z+6	; 0x06
     cd6:	97 81       	ldd	r25, Z+7	; 0x07
     cd8:	26 c0       	rjmp	.+76     	; 0xd26 <__stack+0x427>
     cda:	8f ef       	ldi	r24, 0xFF	; 255
     cdc:	9f ef       	ldi	r25, 0xFF	; 255
     cde:	23 c0       	rjmp	.+70     	; 0xd26 <__stack+0x427>
     ce0:	b7 01       	movw	r22, r14
     ce2:	80 e2       	ldi	r24, 0x20	; 32
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     cea:	5a 94       	dec	r5
     cec:	51 10       	cpse	r5, r1
     cee:	f8 cf       	rjmp	.-16     	; 0xce0 <__stack+0x3e1>
     cf0:	d8 cf       	rjmp	.-80     	; 0xca2 <__stack+0x3a3>
     cf2:	51 2c       	mov	r5, r1
     cf4:	b7 01       	movw	r22, r14
     cf6:	80 2f       	mov	r24, r16
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     cfe:	d3 cf       	rjmp	.-90     	; 0xca6 <__stack+0x3a7>
     d00:	0c e6       	ldi	r16, 0x6C	; 108
     d02:	10 e0       	ldi	r17, 0x00	; 0
     d04:	d5 cf       	rjmp	.-86     	; 0xcb0 <__stack+0x3b1>
     d06:	91 10       	cpse	r9, r1
     d08:	80 52       	subi	r24, 0x20	; 32
     d0a:	b7 01       	movw	r22, r14
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <fputc>
     d12:	0f 5f       	subi	r16, 0xFF	; 255
     d14:	1f 4f       	sbci	r17, 0xFF	; 255
     d16:	cf cf       	rjmp	.-98     	; 0xcb6 <__stack+0x3b7>
     d18:	23 e0       	ldi	r18, 0x03	; 3
     d1a:	25 15       	cp	r18, r5
     d1c:	10 f4       	brcc	.+4      	; 0xd22 <__stack+0x423>
     d1e:	83 e0       	ldi	r24, 0x03	; 3
     d20:	bd cf       	rjmp	.-134    	; 0xc9c <__stack+0x39d>
     d22:	51 2c       	mov	r5, r1
     d24:	c0 cf       	rjmp	.-128    	; 0xca6 <__stack+0x3a7>
     d26:	60 96       	adiw	r28, 0x10	; 16
     d28:	e2 e1       	ldi	r30, 0x12	; 18
     d2a:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__epilogue_restores__>

00000d2e <putval>:
     d2e:	20 fd       	sbrc	r18, 0
     d30:	09 c0       	rjmp	.+18     	; 0xd44 <putval+0x16>
     d32:	fc 01       	movw	r30, r24
     d34:	23 fd       	sbrc	r18, 3
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <putval+0x14>
     d38:	22 ff       	sbrs	r18, 2
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <putval+0x12>
     d3c:	73 83       	std	Z+3, r23	; 0x03
     d3e:	62 83       	std	Z+2, r22	; 0x02
     d40:	51 83       	std	Z+1, r21	; 0x01
     d42:	40 83       	st	Z, r20
     d44:	08 95       	ret

00000d46 <mulacc>:
     d46:	44 fd       	sbrc	r20, 4
     d48:	17 c0       	rjmp	.+46     	; 0xd78 <mulacc+0x32>
     d4a:	46 fd       	sbrc	r20, 6
     d4c:	17 c0       	rjmp	.+46     	; 0xd7c <mulacc+0x36>
     d4e:	ab 01       	movw	r20, r22
     d50:	bc 01       	movw	r22, r24
     d52:	da 01       	movw	r26, r20
     d54:	fb 01       	movw	r30, r22
     d56:	aa 0f       	add	r26, r26
     d58:	bb 1f       	adc	r27, r27
     d5a:	ee 1f       	adc	r30, r30
     d5c:	ff 1f       	adc	r31, r31
     d5e:	10 94       	com	r1
     d60:	d1 f7       	brne	.-12     	; 0xd56 <mulacc+0x10>
     d62:	4a 0f       	add	r20, r26
     d64:	5b 1f       	adc	r21, r27
     d66:	6e 1f       	adc	r22, r30
     d68:	7f 1f       	adc	r23, r31
     d6a:	cb 01       	movw	r24, r22
     d6c:	ba 01       	movw	r22, r20
     d6e:	66 0f       	add	r22, r22
     d70:	77 1f       	adc	r23, r23
     d72:	88 1f       	adc	r24, r24
     d74:	99 1f       	adc	r25, r25
     d76:	09 c0       	rjmp	.+18     	; 0xd8a <mulacc+0x44>
     d78:	33 e0       	ldi	r19, 0x03	; 3
     d7a:	01 c0       	rjmp	.+2      	; 0xd7e <mulacc+0x38>
     d7c:	34 e0       	ldi	r19, 0x04	; 4
     d7e:	66 0f       	add	r22, r22
     d80:	77 1f       	adc	r23, r23
     d82:	88 1f       	adc	r24, r24
     d84:	99 1f       	adc	r25, r25
     d86:	31 50       	subi	r19, 0x01	; 1
     d88:	d1 f7       	brne	.-12     	; 0xd7e <mulacc+0x38>
     d8a:	62 0f       	add	r22, r18
     d8c:	71 1d       	adc	r23, r1
     d8e:	81 1d       	adc	r24, r1
     d90:	91 1d       	adc	r25, r1
     d92:	08 95       	ret

00000d94 <skip_spaces>:
     d94:	0f 93       	push	r16
     d96:	1f 93       	push	r17
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	8c 01       	movw	r16, r24
     d9e:	c8 01       	movw	r24, r16
     da0:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     da4:	ec 01       	movw	r28, r24
     da6:	97 fd       	sbrc	r25, 7
     da8:	08 c0       	rjmp	.+16     	; 0xdba <skip_spaces+0x26>
     daa:	0e 94 af 0c 	call	0x195e	; 0x195e <isspace>
     dae:	89 2b       	or	r24, r25
     db0:	b1 f7       	brne	.-20     	; 0xd9e <skip_spaces+0xa>
     db2:	b8 01       	movw	r22, r16
     db4:	ce 01       	movw	r24, r28
     db6:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
     dba:	ce 01       	movw	r24, r28
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	0f 91       	pop	r16
     dc4:	08 95       	ret

00000dc6 <conv_int>:
     dc6:	a0 e0       	ldi	r26, 0x00	; 0
     dc8:	b0 e0       	ldi	r27, 0x00	; 0
     dca:	e9 ee       	ldi	r30, 0xE9	; 233
     dcc:	f6 e0       	ldi	r31, 0x06	; 6
     dce:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0xc>
     dd2:	7c 01       	movw	r14, r24
     dd4:	8b 01       	movw	r16, r22
     dd6:	6a 01       	movw	r12, r20
     dd8:	d2 2f       	mov	r29, r18
     dda:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     dde:	9c 01       	movw	r18, r24
     de0:	33 27       	eor	r19, r19
     de2:	2b 32       	cpi	r18, 0x2B	; 43
     de4:	31 05       	cpc	r19, r1
     de6:	21 f0       	breq	.+8      	; 0xdf0 <conv_int+0x2a>
     de8:	2d 32       	cpi	r18, 0x2D	; 45
     dea:	31 05       	cpc	r19, r1
     dec:	59 f4       	brne	.+22     	; 0xe04 <conv_int+0x3e>
     dee:	d0 68       	ori	r29, 0x80	; 128
     df0:	01 50       	subi	r16, 0x01	; 1
     df2:	11 09       	sbc	r17, r1
     df4:	11 f4       	brne	.+4      	; 0xdfa <conv_int+0x34>
     df6:	80 e0       	ldi	r24, 0x00	; 0
     df8:	6b c0       	rjmp	.+214    	; 0xed0 <conv_int+0x10a>
     dfa:	c7 01       	movw	r24, r14
     dfc:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     e00:	97 fd       	sbrc	r25, 7
     e02:	f9 cf       	rjmp	.-14     	; 0xdf6 <conv_int+0x30>
     e04:	cd 2f       	mov	r28, r29
     e06:	cd 7f       	andi	r28, 0xFD	; 253
     e08:	2d 2f       	mov	r18, r29
     e0a:	20 73       	andi	r18, 0x30	; 48
     e0c:	19 f5       	brne	.+70     	; 0xe54 <conv_int+0x8e>
     e0e:	80 33       	cpi	r24, 0x30	; 48
     e10:	09 f5       	brne	.+66     	; 0xe54 <conv_int+0x8e>
     e12:	58 01       	movw	r10, r16
     e14:	81 e0       	ldi	r24, 0x01	; 1
     e16:	a8 1a       	sub	r10, r24
     e18:	b1 08       	sbc	r11, r1
     e1a:	09 f4       	brne	.+2      	; 0xe1e <conv_int+0x58>
     e1c:	45 c0       	rjmp	.+138    	; 0xea8 <conv_int+0xe2>
     e1e:	c7 01       	movw	r24, r14
     e20:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     e24:	97 fd       	sbrc	r25, 7
     e26:	40 c0       	rjmp	.+128    	; 0xea8 <conv_int+0xe2>
     e28:	9c 01       	movw	r18, r24
     e2a:	2f 7d       	andi	r18, 0xDF	; 223
     e2c:	33 27       	eor	r19, r19
     e2e:	28 35       	cpi	r18, 0x58	; 88
     e30:	31 05       	cpc	r19, r1
     e32:	51 f4       	brne	.+20     	; 0xe48 <conv_int+0x82>
     e34:	c2 64       	ori	r28, 0x42	; 66
     e36:	02 50       	subi	r16, 0x02	; 2
     e38:	11 09       	sbc	r17, r1
     e3a:	b1 f1       	breq	.+108    	; 0xea8 <conv_int+0xe2>
     e3c:	c7 01       	movw	r24, r14
     e3e:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     e42:	97 ff       	sbrs	r25, 7
     e44:	07 c0       	rjmp	.+14     	; 0xe54 <conv_int+0x8e>
     e46:	30 c0       	rjmp	.+96     	; 0xea8 <conv_int+0xe2>
     e48:	d6 ff       	sbrs	r29, 6
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <conv_int+0x8a>
     e4c:	c2 60       	ori	r28, 0x02	; 2
     e4e:	01 c0       	rjmp	.+2      	; 0xe52 <conv_int+0x8c>
     e50:	c2 61       	ori	r28, 0x12	; 18
     e52:	85 01       	movw	r16, r10
     e54:	81 2c       	mov	r8, r1
     e56:	91 2c       	mov	r9, r1
     e58:	54 01       	movw	r10, r8
     e5a:	20 ed       	ldi	r18, 0xD0	; 208
     e5c:	28 0f       	add	r18, r24
     e5e:	28 30       	cpi	r18, 0x08	; 8
     e60:	80 f0       	brcs	.+32     	; 0xe82 <conv_int+0xbc>
     e62:	c4 ff       	sbrs	r28, 4
     e64:	04 c0       	rjmp	.+8      	; 0xe6e <conv_int+0xa8>
     e66:	b7 01       	movw	r22, r14
     e68:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
     e6c:	1a c0       	rjmp	.+52     	; 0xea2 <conv_int+0xdc>
     e6e:	2a 30       	cpi	r18, 0x0A	; 10
     e70:	40 f0       	brcs	.+16     	; 0xe82 <conv_int+0xbc>
     e72:	c6 ff       	sbrs	r28, 6
     e74:	f8 cf       	rjmp	.-16     	; 0xe66 <conv_int+0xa0>
     e76:	2f 7d       	andi	r18, 0xDF	; 223
     e78:	3f ee       	ldi	r19, 0xEF	; 239
     e7a:	32 0f       	add	r19, r18
     e7c:	36 30       	cpi	r19, 0x06	; 6
     e7e:	98 f7       	brcc	.-26     	; 0xe66 <conv_int+0xa0>
     e80:	27 50       	subi	r18, 0x07	; 7
     e82:	4c 2f       	mov	r20, r28
     e84:	c5 01       	movw	r24, r10
     e86:	b4 01       	movw	r22, r8
     e88:	0e 94 a3 06 	call	0xd46	; 0xd46 <mulacc>
     e8c:	4b 01       	movw	r8, r22
     e8e:	5c 01       	movw	r10, r24
     e90:	c2 60       	ori	r28, 0x02	; 2
     e92:	01 50       	subi	r16, 0x01	; 1
     e94:	11 09       	sbc	r17, r1
     e96:	59 f0       	breq	.+22     	; 0xeae <conv_int+0xe8>
     e98:	c7 01       	movw	r24, r14
     e9a:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     e9e:	97 ff       	sbrs	r25, 7
     ea0:	dc cf       	rjmp	.-72     	; 0xe5a <conv_int+0x94>
     ea2:	c1 fd       	sbrc	r28, 1
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <conv_int+0xe8>
     ea6:	a7 cf       	rjmp	.-178    	; 0xdf6 <conv_int+0x30>
     ea8:	81 2c       	mov	r8, r1
     eaa:	91 2c       	mov	r9, r1
     eac:	54 01       	movw	r10, r8
     eae:	c7 ff       	sbrs	r28, 7
     eb0:	08 c0       	rjmp	.+16     	; 0xec2 <conv_int+0xfc>
     eb2:	b0 94       	com	r11
     eb4:	a0 94       	com	r10
     eb6:	90 94       	com	r9
     eb8:	80 94       	com	r8
     eba:	81 1c       	adc	r8, r1
     ebc:	91 1c       	adc	r9, r1
     ebe:	a1 1c       	adc	r10, r1
     ec0:	b1 1c       	adc	r11, r1
     ec2:	2c 2f       	mov	r18, r28
     ec4:	b5 01       	movw	r22, r10
     ec6:	a4 01       	movw	r20, r8
     ec8:	c6 01       	movw	r24, r12
     eca:	0e 94 97 06 	call	0xd2e	; 0xd2e <putval>
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	cd b7       	in	r28, 0x3d	; 61
     ed2:	de b7       	in	r29, 0x3e	; 62
     ed4:	ec e0       	ldi	r30, 0x0C	; 12
     ed6:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0xc>

00000eda <conv_brk>:
     eda:	a0 e2       	ldi	r26, 0x20	; 32
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e3 e7       	ldi	r30, 0x73	; 115
     ee0:	f7 e0       	ldi	r31, 0x07	; 7
     ee2:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__prologue_saves__+0x4>
     ee6:	5c 01       	movw	r10, r24
     ee8:	4b 01       	movw	r8, r22
     eea:	7a 01       	movw	r14, r20
     eec:	8e 01       	movw	r16, r28
     eee:	0f 5f       	subi	r16, 0xFF	; 255
     ef0:	1f 4f       	sbci	r17, 0xFF	; 255
     ef2:	68 01       	movw	r12, r16
     ef4:	80 e2       	ldi	r24, 0x20	; 32
     ef6:	f8 01       	movw	r30, r16
     ef8:	11 92       	st	Z+, r1
     efa:	8a 95       	dec	r24
     efc:	e9 f7       	brne	.-6      	; 0xef8 <conv_brk+0x1e>
     efe:	f5 01       	movw	r30, r10
     f00:	53 80       	ldd	r5, Z+3	; 0x03
     f02:	40 e0       	ldi	r20, 0x00	; 0
     f04:	50 e0       	ldi	r21, 0x00	; 0
     f06:	61 2c       	mov	r6, r1
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	71 2c       	mov	r7, r1
     f0c:	a1 e0       	ldi	r26, 0x01	; 1
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	f9 01       	movw	r30, r18
     f12:	53 fc       	sbrc	r5, 3
     f14:	85 91       	lpm	r24, Z+
     f16:	53 fe       	sbrs	r5, 3
     f18:	81 91       	ld	r24, Z+
     f1a:	8f 01       	movw	r16, r30
     f1c:	48 2e       	mov	r4, r24
     f1e:	9f 01       	movw	r18, r30
     f20:	81 11       	cpse	r24, r1
     f22:	03 c0       	rjmp	.+6      	; 0xf2a <conv_brk+0x50>
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	96 c0       	rjmp	.+300    	; 0x1056 <conv_brk+0x17c>
     f2a:	8e 35       	cpi	r24, 0x5E	; 94
     f2c:	19 f4       	brne	.+6      	; 0xf34 <conv_brk+0x5a>
     f2e:	41 15       	cp	r20, r1
     f30:	51 05       	cpc	r21, r1
     f32:	51 f1       	breq	.+84     	; 0xf88 <conv_brk+0xae>
     f34:	67 2d       	mov	r22, r7
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	64 17       	cp	r22, r20
     f3a:	75 07       	cpc	r23, r21
     f3c:	3c f4       	brge	.+14     	; 0xf4c <conv_brk+0x72>
     f3e:	8d 35       	cpi	r24, 0x5D	; 93
     f40:	61 f1       	breq	.+88     	; 0xf9a <conv_brk+0xc0>
     f42:	8d 32       	cpi	r24, 0x2D	; 45
     f44:	19 f4       	brne	.+6      	; 0xf4c <conv_brk+0x72>
     f46:	99 23       	and	r25, r25
     f48:	11 f1       	breq	.+68     	; 0xf8e <conv_brk+0xb4>
     f4a:	03 c0       	rjmp	.+6      	; 0xf52 <conv_brk+0x78>
     f4c:	99 23       	and	r25, r25
     f4e:	09 f4       	brne	.+2      	; 0xf52 <conv_brk+0x78>
     f50:	6d c0       	rjmp	.+218    	; 0x102c <conv_brk+0x152>
     f52:	84 2d       	mov	r24, r4
     f54:	86 95       	lsr	r24
     f56:	86 95       	lsr	r24
     f58:	86 95       	lsr	r24
     f5a:	f6 01       	movw	r30, r12
     f5c:	e8 0f       	add	r30, r24
     f5e:	f1 1d       	adc	r31, r1
     f60:	84 2d       	mov	r24, r4
     f62:	87 70       	andi	r24, 0x07	; 7
     f64:	8d 01       	movw	r16, r26
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <conv_brk+0x92>
     f68:	00 0f       	add	r16, r16
     f6a:	11 1f       	adc	r17, r17
     f6c:	8a 95       	dec	r24
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <conv_brk+0x8e>
     f70:	c8 01       	movw	r24, r16
     f72:	90 81       	ld	r25, Z
     f74:	89 2b       	or	r24, r25
     f76:	80 83       	st	Z, r24
     f78:	64 14       	cp	r6, r4
     f7a:	59 f0       	breq	.+22     	; 0xf92 <conv_brk+0xb8>
     f7c:	46 14       	cp	r4, r6
     f7e:	10 f4       	brcc	.+4      	; 0xf84 <conv_brk+0xaa>
     f80:	43 94       	inc	r4
     f82:	e7 cf       	rjmp	.-50     	; 0xf52 <conv_brk+0x78>
     f84:	4a 94       	dec	r4
     f86:	e5 cf       	rjmp	.-54     	; 0xf52 <conv_brk+0x78>
     f88:	77 24       	eor	r7, r7
     f8a:	73 94       	inc	r7
     f8c:	03 c0       	rjmp	.+6      	; 0xf94 <conv_brk+0xba>
     f8e:	91 e0       	ldi	r25, 0x01	; 1
     f90:	01 c0       	rjmp	.+2      	; 0xf94 <conv_brk+0xba>
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	4f 5f       	subi	r20, 0xFF	; 255
     f96:	5f 4f       	sbci	r21, 0xFF	; 255
     f98:	bb cf       	rjmp	.-138    	; 0xf10 <conv_brk+0x36>
     f9a:	99 23       	and	r25, r25
     f9c:	19 f0       	breq	.+6      	; 0xfa4 <conv_brk+0xca>
     f9e:	8e 81       	ldd	r24, Y+6	; 0x06
     fa0:	80 62       	ori	r24, 0x20	; 32
     fa2:	8e 83       	std	Y+6, r24	; 0x06
     fa4:	71 10       	cpse	r7, r1
     fa6:	03 c0       	rjmp	.+6      	; 0xfae <conv_brk+0xd4>
     fa8:	77 24       	eor	r7, r7
     faa:	73 94       	inc	r7
     fac:	19 c0       	rjmp	.+50     	; 0xfe0 <conv_brk+0x106>
     fae:	f6 01       	movw	r30, r12
     fb0:	9e 01       	movw	r18, r28
     fb2:	2f 5d       	subi	r18, 0xDF	; 223
     fb4:	3f 4f       	sbci	r19, 0xFF	; 255
     fb6:	80 81       	ld	r24, Z
     fb8:	80 95       	com	r24
     fba:	81 93       	st	Z+, r24
     fbc:	2e 17       	cp	r18, r30
     fbe:	3f 07       	cpc	r19, r31
     fc0:	d1 f7       	brne	.-12     	; 0xfb6 <conv_brk+0xdc>
     fc2:	f2 cf       	rjmp	.-28     	; 0xfa8 <conv_brk+0xce>
     fc4:	e1 14       	cp	r14, r1
     fc6:	f1 04       	cpc	r15, r1
     fc8:	31 f0       	breq	.+12     	; 0xfd6 <conv_brk+0xfc>
     fca:	f7 01       	movw	r30, r14
     fcc:	80 83       	st	Z, r24
     fce:	b7 01       	movw	r22, r14
     fd0:	6f 5f       	subi	r22, 0xFF	; 255
     fd2:	7f 4f       	sbci	r23, 0xFF	; 255
     fd4:	7b 01       	movw	r14, r22
     fd6:	71 e0       	ldi	r23, 0x01	; 1
     fd8:	87 1a       	sub	r8, r23
     fda:	91 08       	sbc	r9, r1
     fdc:	71 2c       	mov	r7, r1
     fde:	f9 f0       	breq	.+62     	; 0x101e <conv_brk+0x144>
     fe0:	c5 01       	movw	r24, r10
     fe2:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
     fe6:	97 fd       	sbrc	r25, 7
     fe8:	18 c0       	rjmp	.+48     	; 0x101a <conv_brk+0x140>
     fea:	fc 01       	movw	r30, r24
     fec:	ff 27       	eor	r31, r31
     fee:	23 e0       	ldi	r18, 0x03	; 3
     ff0:	f5 95       	asr	r31
     ff2:	e7 95       	ror	r30
     ff4:	2a 95       	dec	r18
     ff6:	e1 f7       	brne	.-8      	; 0xff0 <conv_brk+0x116>
     ff8:	ec 0d       	add	r30, r12
     ffa:	fd 1d       	adc	r31, r13
     ffc:	20 81       	ld	r18, Z
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	ac 01       	movw	r20, r24
    1002:	47 70       	andi	r20, 0x07	; 7
    1004:	55 27       	eor	r21, r21
    1006:	02 c0       	rjmp	.+4      	; 0x100c <conv_brk+0x132>
    1008:	35 95       	asr	r19
    100a:	27 95       	ror	r18
    100c:	4a 95       	dec	r20
    100e:	e2 f7       	brpl	.-8      	; 0x1008 <conv_brk+0x12e>
    1010:	20 fd       	sbrc	r18, 0
    1012:	d8 cf       	rjmp	.-80     	; 0xfc4 <conv_brk+0xea>
    1014:	b5 01       	movw	r22, r10
    1016:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
    101a:	71 10       	cpse	r7, r1
    101c:	83 cf       	rjmp	.-250    	; 0xf24 <conv_brk+0x4a>
    101e:	e1 14       	cp	r14, r1
    1020:	f1 04       	cpc	r15, r1
    1022:	11 f0       	breq	.+4      	; 0x1028 <conv_brk+0x14e>
    1024:	f7 01       	movw	r30, r14
    1026:	10 82       	st	Z, r1
    1028:	c8 01       	movw	r24, r16
    102a:	15 c0       	rjmp	.+42     	; 0x1056 <conv_brk+0x17c>
    102c:	68 2f       	mov	r22, r24
    102e:	66 95       	lsr	r22
    1030:	66 95       	lsr	r22
    1032:	66 95       	lsr	r22
    1034:	f6 01       	movw	r30, r12
    1036:	e6 0f       	add	r30, r22
    1038:	f1 1d       	adc	r31, r1
    103a:	68 2f       	mov	r22, r24
    103c:	67 70       	andi	r22, 0x07	; 7
    103e:	8d 01       	movw	r16, r26
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <conv_brk+0x16c>
    1042:	00 0f       	add	r16, r16
    1044:	11 1f       	adc	r17, r17
    1046:	6a 95       	dec	r22
    1048:	e2 f7       	brpl	.-8      	; 0x1042 <conv_brk+0x168>
    104a:	b8 01       	movw	r22, r16
    104c:	70 81       	ld	r23, Z
    104e:	67 2b       	or	r22, r23
    1050:	60 83       	st	Z, r22
    1052:	68 2e       	mov	r6, r24
    1054:	9f cf       	rjmp	.-194    	; 0xf94 <conv_brk+0xba>
    1056:	a0 96       	adiw	r28, 0x20	; 32
    1058:	e0 e1       	ldi	r30, 0x10	; 16
    105a:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__epilogue_restores__+0x4>

0000105e <conv_flt>:
    105e:	2f 92       	push	r2
    1060:	3f 92       	push	r3
    1062:	4f 92       	push	r4
    1064:	5f 92       	push	r5
    1066:	6f 92       	push	r6
    1068:	7f 92       	push	r7
    106a:	9f 92       	push	r9
    106c:	af 92       	push	r10
    106e:	bf 92       	push	r11
    1070:	cf 92       	push	r12
    1072:	df 92       	push	r13
    1074:	ef 92       	push	r14
    1076:	ff 92       	push	r15
    1078:	0f 93       	push	r16
    107a:	1f 93       	push	r17
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	6c 01       	movw	r12, r24
    1082:	8b 01       	movw	r16, r22
    1084:	1a 01       	movw	r2, r20
    1086:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    108a:	ec 01       	movw	r28, r24
    108c:	99 27       	eor	r25, r25
    108e:	8b 32       	cpi	r24, 0x2B	; 43
    1090:	91 05       	cpc	r25, r1
    1092:	29 f0       	breq	.+10     	; 0x109e <conv_flt+0x40>
    1094:	8d 97       	sbiw	r24, 0x2d	; 45
    1096:	81 f4       	brne	.+32     	; 0x10b8 <conv_flt+0x5a>
    1098:	30 e8       	ldi	r19, 0x80	; 128
    109a:	93 2e       	mov	r9, r19
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <conv_flt+0x42>
    109e:	91 2c       	mov	r9, r1
    10a0:	01 50       	subi	r16, 0x01	; 1
    10a2:	11 09       	sbc	r17, r1
    10a4:	11 f4       	brne	.+4      	; 0x10aa <conv_flt+0x4c>
    10a6:	80 e0       	ldi	r24, 0x00	; 0
    10a8:	0c c1       	rjmp	.+536    	; 0x12c2 <conv_flt+0x264>
    10aa:	c6 01       	movw	r24, r12
    10ac:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    10b0:	ec 01       	movw	r28, r24
    10b2:	97 ff       	sbrs	r25, 7
    10b4:	02 c0       	rjmp	.+4      	; 0x10ba <conv_flt+0x5c>
    10b6:	f7 cf       	rjmp	.-18     	; 0x10a6 <conv_flt+0x48>
    10b8:	91 2c       	mov	r9, r1
    10ba:	ce 01       	movw	r24, r28
    10bc:	0e 94 b8 0c 	call	0x1970	; 0x1970 <tolower>
    10c0:	89 36       	cpi	r24, 0x69	; 105
    10c2:	91 05       	cpc	r25, r1
    10c4:	31 f0       	breq	.+12     	; 0x10d2 <conv_flt+0x74>
    10c6:	8e 36       	cpi	r24, 0x6E	; 110
    10c8:	91 05       	cpc	r25, r1
    10ca:	99 f5       	brne	.+102    	; 0x1132 <conv_flt+0xd4>
    10cc:	cc e7       	ldi	r28, 0x7C	; 124
    10ce:	d1 e0       	ldi	r29, 0x01	; 1
    10d0:	02 c0       	rjmp	.+4      	; 0x10d6 <conv_flt+0x78>
    10d2:	cf e7       	ldi	r28, 0x7F	; 127
    10d4:	d1 e0       	ldi	r29, 0x01	; 1
    10d6:	21 96       	adiw	r28, 0x01	; 1
    10d8:	fe 01       	movw	r30, r28
    10da:	31 97       	sbiw	r30, 0x01	; 1
    10dc:	b4 90       	lpm	r11, Z
    10de:	bb 20       	and	r11, r11
    10e0:	c9 f0       	breq	.+50     	; 0x1114 <conv_flt+0xb6>
    10e2:	01 50       	subi	r16, 0x01	; 1
    10e4:	11 09       	sbc	r17, r1
    10e6:	91 f0       	breq	.+36     	; 0x110c <conv_flt+0xae>
    10e8:	c6 01       	movw	r24, r12
    10ea:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    10ee:	7c 01       	movw	r14, r24
    10f0:	97 fd       	sbrc	r25, 7
    10f2:	0c c0       	rjmp	.+24     	; 0x110c <conv_flt+0xae>
    10f4:	0e 94 b8 0c 	call	0x1970	; 0x1970 <tolower>
    10f8:	99 27       	eor	r25, r25
    10fa:	eb 2d       	mov	r30, r11
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	8e 17       	cp	r24, r30
    1100:	9f 07       	cpc	r25, r31
    1102:	49 f3       	breq	.-46     	; 0x10d6 <conv_flt+0x78>
    1104:	b6 01       	movw	r22, r12
    1106:	c7 01       	movw	r24, r14
    1108:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
    110c:	c2 58       	subi	r28, 0x82	; 130
    110e:	d1 40       	sbci	r29, 0x01	; 1
    1110:	51 f6       	brne	.-108    	; 0x10a6 <conv_flt+0x48>
    1112:	03 c0       	rjmp	.+6      	; 0x111a <conv_flt+0xbc>
    1114:	cf 57       	subi	r28, 0x7F	; 127
    1116:	d1 40       	sbci	r29, 0x01	; 1
    1118:	29 f0       	breq	.+10     	; 0x1124 <conv_flt+0xc6>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	a0 e8       	ldi	r26, 0x80	; 128
    1120:	bf e7       	ldi	r27, 0x7F	; 127
    1122:	04 c0       	rjmp	.+8      	; 0x112c <conv_flt+0xce>
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a0 ec       	ldi	r26, 0xC0	; 192
    112a:	bf e7       	ldi	r27, 0x7F	; 127
    112c:	bc 01       	movw	r22, r24
    112e:	cd 01       	movw	r24, r26
    1130:	b8 c0       	rjmp	.+368    	; 0x12a2 <conv_flt+0x244>
    1132:	41 2c       	mov	r4, r1
    1134:	51 2c       	mov	r5, r1
    1136:	32 01       	movw	r6, r4
    1138:	e1 2c       	mov	r14, r1
    113a:	f1 2c       	mov	r15, r1
    113c:	2c 2f       	mov	r18, r28
    113e:	20 53       	subi	r18, 0x30	; 48
    1140:	2a 30       	cpi	r18, 0x0A	; 10
    1142:	10 f5       	brcc	.+68     	; 0x1188 <conv_flt+0x12a>
    1144:	e9 2d       	mov	r30, r9
    1146:	e2 60       	ori	r30, 0x02	; 2
    1148:	be 2e       	mov	r11, r30
    114a:	89 2d       	mov	r24, r9
    114c:	88 70       	andi	r24, 0x08	; 8
    114e:	92 fe       	sbrs	r9, 2
    1150:	06 c0       	rjmp	.+12     	; 0x115e <conv_flt+0x100>
    1152:	81 11       	cpse	r24, r1
    1154:	20 c0       	rjmp	.+64     	; 0x1196 <conv_flt+0x138>
    1156:	ff ef       	ldi	r31, 0xFF	; 255
    1158:	ef 1a       	sub	r14, r31
    115a:	ff 0a       	sbc	r15, r31
    115c:	1c c0       	rjmp	.+56     	; 0x1196 <conv_flt+0x138>
    115e:	88 23       	and	r24, r24
    1160:	19 f0       	breq	.+6      	; 0x1168 <conv_flt+0x10a>
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	e8 1a       	sub	r14, r24
    1166:	f1 08       	sbc	r15, r1
    1168:	40 e2       	ldi	r20, 0x20	; 32
    116a:	c3 01       	movw	r24, r6
    116c:	b2 01       	movw	r22, r4
    116e:	0e 94 a3 06 	call	0xd46	; 0xd46 <mulacc>
    1172:	2b 01       	movw	r4, r22
    1174:	3c 01       	movw	r6, r24
    1176:	68 39       	cpi	r22, 0x98	; 152
    1178:	79 49       	sbci	r23, 0x99	; 153
    117a:	89 49       	sbci	r24, 0x99	; 153
    117c:	99 41       	sbci	r25, 0x19	; 25
    117e:	58 f0       	brcs	.+22     	; 0x1196 <conv_flt+0x138>
    1180:	f9 2d       	mov	r31, r9
    1182:	f6 60       	ori	r31, 0x06	; 6
    1184:	bf 2e       	mov	r11, r31
    1186:	07 c0       	rjmp	.+14     	; 0x1196 <conv_flt+0x138>
    1188:	2e 3f       	cpi	r18, 0xFE	; 254
    118a:	89 f4       	brne	.+34     	; 0x11ae <conv_flt+0x150>
    118c:	93 fc       	sbrc	r9, 3
    118e:	0f c0       	rjmp	.+30     	; 0x11ae <conv_flt+0x150>
    1190:	29 2d       	mov	r18, r9
    1192:	28 60       	ori	r18, 0x08	; 8
    1194:	b2 2e       	mov	r11, r18
    1196:	01 50       	subi	r16, 0x01	; 1
    1198:	11 09       	sbc	r17, r1
    119a:	41 f0       	breq	.+16     	; 0x11ac <conv_flt+0x14e>
    119c:	c6 01       	movw	r24, r12
    119e:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    11a2:	ec 01       	movw	r28, r24
    11a4:	9b 2c       	mov	r9, r11
    11a6:	97 ff       	sbrs	r25, 7
    11a8:	c9 cf       	rjmp	.-110    	; 0x113c <conv_flt+0xde>
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <conv_flt+0x150>
    11ac:	9b 2c       	mov	r9, r11
    11ae:	91 fe       	sbrs	r9, 1
    11b0:	7a cf       	rjmp	.-268    	; 0x10a6 <conv_flt+0x48>
    11b2:	ce 01       	movw	r24, r28
    11b4:	8f 7d       	andi	r24, 0xDF	; 223
    11b6:	99 27       	eor	r25, r25
    11b8:	85 34       	cpi	r24, 0x45	; 69
    11ba:	91 05       	cpc	r25, r1
    11bc:	09 f0       	breq	.+2      	; 0x11c0 <conv_flt+0x162>
    11be:	42 c0       	rjmp	.+132    	; 0x1244 <conv_flt+0x1e6>
    11c0:	58 01       	movw	r10, r16
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	a8 1a       	sub	r10, r24
    11c6:	b1 08       	sbc	r11, r1
    11c8:	09 f4       	brne	.+2      	; 0x11cc <conv_flt+0x16e>
    11ca:	6d cf       	rjmp	.-294    	; 0x10a6 <conv_flt+0x48>
    11cc:	c6 01       	movw	r24, r12
    11ce:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    11d2:	ec 01       	movw	r28, r24
    11d4:	97 fd       	sbrc	r25, 7
    11d6:	67 cf       	rjmp	.-306    	; 0x10a6 <conv_flt+0x48>
    11d8:	99 27       	eor	r25, r25
    11da:	8b 32       	cpi	r24, 0x2B	; 43
    11dc:	91 05       	cpc	r25, r1
    11de:	29 f0       	breq	.+10     	; 0x11ea <conv_flt+0x18c>
    11e0:	8d 97       	sbiw	r24, 0x2d	; 45
    11e2:	69 f4       	brne	.+26     	; 0x11fe <conv_flt+0x1a0>
    11e4:	e9 2d       	mov	r30, r9
    11e6:	e0 61       	ori	r30, 0x10	; 16
    11e8:	9e 2e       	mov	r9, r30
    11ea:	58 01       	movw	r10, r16
    11ec:	f2 e0       	ldi	r31, 0x02	; 2
    11ee:	af 1a       	sub	r10, r31
    11f0:	b1 08       	sbc	r11, r1
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <conv_flt+0x198>
    11f4:	58 cf       	rjmp	.-336    	; 0x10a6 <conv_flt+0x48>
    11f6:	c6 01       	movw	r24, r12
    11f8:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    11fc:	ec 01       	movw	r28, r24
    11fe:	ce 01       	movw	r24, r28
    1200:	c0 97       	sbiw	r24, 0x30	; 48
    1202:	0a 97       	sbiw	r24, 0x0a	; 10
    1204:	08 f0       	brcs	.+2      	; 0x1208 <conv_flt+0x1aa>
    1206:	4f cf       	rjmp	.-354    	; 0x10a6 <conv_flt+0x48>
    1208:	85 01       	movw	r16, r10
    120a:	a1 2c       	mov	r10, r1
    120c:	b1 2c       	mov	r11, r1
    120e:	b5 01       	movw	r22, r10
    1210:	bb 0c       	add	r11, r11
    1212:	88 0b       	sbc	r24, r24
    1214:	99 0b       	sbc	r25, r25
    1216:	2c 2f       	mov	r18, r28
    1218:	20 53       	subi	r18, 0x30	; 48
    121a:	40 e2       	ldi	r20, 0x20	; 32
    121c:	0e 94 a3 06 	call	0xd46	; 0xd46 <mulacc>
    1220:	5b 01       	movw	r10, r22
    1222:	01 50       	subi	r16, 0x01	; 1
    1224:	11 09       	sbc	r17, r1
    1226:	39 f0       	breq	.+14     	; 0x1236 <conv_flt+0x1d8>
    1228:	c6 01       	movw	r24, r12
    122a:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    122e:	ec 01       	movw	r28, r24
    1230:	c0 97       	sbiw	r24, 0x30	; 48
    1232:	0a 97       	sbiw	r24, 0x0a	; 10
    1234:	60 f3       	brcs	.-40     	; 0x120e <conv_flt+0x1b0>
    1236:	94 fe       	sbrs	r9, 4
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <conv_flt+0x1e2>
    123a:	b1 94       	neg	r11
    123c:	a1 94       	neg	r10
    123e:	b1 08       	sbc	r11, r1
    1240:	ea 0c       	add	r14, r10
    1242:	fb 1c       	adc	r15, r11
    1244:	01 2b       	or	r16, r17
    1246:	31 f0       	breq	.+12     	; 0x1254 <conv_flt+0x1f6>
    1248:	d7 fd       	sbrc	r29, 7
    124a:	04 c0       	rjmp	.+8      	; 0x1254 <conv_flt+0x1f6>
    124c:	b6 01       	movw	r22, r12
    124e:	ce 01       	movw	r24, r28
    1250:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
    1254:	c3 01       	movw	r24, r6
    1256:	b2 01       	movw	r22, r4
    1258:	0e 94 a5 0a 	call	0x154a	; 0x154a <__floatunsisf>
    125c:	f7 fe       	sbrs	r15, 7
    125e:	06 c0       	rjmp	.+12     	; 0x126c <conv_flt+0x20e>
    1260:	f1 94       	neg	r15
    1262:	e1 94       	neg	r14
    1264:	f1 08       	sbc	r15, r1
    1266:	cb e9       	ldi	r28, 0x9B	; 155
    1268:	d1 e0       	ldi	r29, 0x01	; 1
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <conv_flt+0x212>
    126c:	c3 eb       	ldi	r28, 0xB3	; 179
    126e:	d1 e0       	ldi	r29, 0x01	; 1
    1270:	6e 01       	movw	r12, r28
    1272:	28 e1       	ldi	r18, 0x18	; 24
    1274:	c2 1a       	sub	r12, r18
    1276:	d1 08       	sbc	r13, r1
    1278:	00 e2       	ldi	r16, 0x20	; 32
    127a:	10 e0       	ldi	r17, 0x00	; 0
    127c:	e0 16       	cp	r14, r16
    127e:	f1 06       	cpc	r15, r17
    1280:	50 f0       	brcs	.+20     	; 0x1296 <conv_flt+0x238>
    1282:	fe 01       	movw	r30, r28
    1284:	25 91       	lpm	r18, Z+
    1286:	35 91       	lpm	r19, Z+
    1288:	45 91       	lpm	r20, Z+
    128a:	54 91       	lpm	r21, Z
    128c:	0e 94 e2 0a 	call	0x15c4	; 0x15c4 <__mulsf3>
    1290:	e0 1a       	sub	r14, r16
    1292:	f1 0a       	sbc	r15, r17
    1294:	f3 cf       	rjmp	.-26     	; 0x127c <conv_flt+0x21e>
    1296:	24 97       	sbiw	r28, 0x04	; 4
    1298:	16 95       	lsr	r17
    129a:	07 95       	ror	r16
    129c:	cc 16       	cp	r12, r28
    129e:	dd 06       	cpc	r13, r29
    12a0:	69 f7       	brne	.-38     	; 0x127c <conv_flt+0x21e>
    12a2:	97 fe       	sbrs	r9, 7
    12a4:	05 c0       	rjmp	.+10     	; 0x12b0 <conv_flt+0x252>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	b0 58       	subi	r27, 0x80	; 128
    12ac:	bc 01       	movw	r22, r24
    12ae:	cd 01       	movw	r24, r26
    12b0:	21 14       	cp	r2, r1
    12b2:	31 04       	cpc	r3, r1
    12b4:	29 f0       	breq	.+10     	; 0x12c0 <conv_flt+0x262>
    12b6:	f1 01       	movw	r30, r2
    12b8:	60 83       	st	Z, r22
    12ba:	71 83       	std	Z+1, r23	; 0x01
    12bc:	82 83       	std	Z+2, r24	; 0x02
    12be:	93 83       	std	Z+3, r25	; 0x03
    12c0:	81 e0       	ldi	r24, 0x01	; 1
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	ff 90       	pop	r15
    12cc:	ef 90       	pop	r14
    12ce:	df 90       	pop	r13
    12d0:	cf 90       	pop	r12
    12d2:	bf 90       	pop	r11
    12d4:	af 90       	pop	r10
    12d6:	9f 90       	pop	r9
    12d8:	7f 90       	pop	r7
    12da:	6f 90       	pop	r6
    12dc:	5f 90       	pop	r5
    12de:	4f 90       	pop	r4
    12e0:	3f 90       	pop	r3
    12e2:	2f 90       	pop	r2
    12e4:	08 95       	ret

000012e6 <vfscanf>:
    12e6:	a0 e0       	ldi	r26, 0x00	; 0
    12e8:	b0 e0       	ldi	r27, 0x00	; 0
    12ea:	e9 e7       	ldi	r30, 0x79	; 121
    12ec:	f9 e0       	ldi	r31, 0x09	; 9
    12ee:	0c 94 a4 0b 	jmp	0x1748	; 0x1748 <__prologue_saves__+0x8>
    12f2:	5c 01       	movw	r10, r24
    12f4:	eb 01       	movw	r28, r22
    12f6:	4a 01       	movw	r8, r20
    12f8:	fc 01       	movw	r30, r24
    12fa:	17 82       	std	Z+7, r1	; 0x07
    12fc:	16 82       	std	Z+6, r1	; 0x06
    12fe:	61 2c       	mov	r6, r1
    1300:	f5 01       	movw	r30, r10
    1302:	03 81       	ldd	r16, Z+3	; 0x03
    1304:	fe 01       	movw	r30, r28
    1306:	03 fd       	sbrc	r16, 3
    1308:	85 91       	lpm	r24, Z+
    130a:	03 ff       	sbrs	r16, 3
    130c:	81 91       	ld	r24, Z+
    130e:	18 2f       	mov	r17, r24
    1310:	ef 01       	movw	r28, r30
    1312:	88 23       	and	r24, r24
    1314:	09 f4       	brne	.+2      	; 0x1318 <vfscanf+0x32>
    1316:	0f c1       	rjmp	.+542    	; 0x1536 <vfscanf+0x250>
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	0e 94 af 0c 	call	0x195e	; 0x195e <isspace>
    131e:	89 2b       	or	r24, r25
    1320:	21 f0       	breq	.+8      	; 0x132a <vfscanf+0x44>
    1322:	c5 01       	movw	r24, r10
    1324:	0e 94 ca 06 	call	0xd94	; 0xd94 <skip_spaces>
    1328:	eb cf       	rjmp	.-42     	; 0x1300 <vfscanf+0x1a>
    132a:	15 32       	cpi	r17, 0x25	; 37
    132c:	41 f4       	brne	.+16     	; 0x133e <vfscanf+0x58>
    132e:	fe 01       	movw	r30, r28
    1330:	03 fd       	sbrc	r16, 3
    1332:	15 91       	lpm	r17, Z+
    1334:	03 ff       	sbrs	r16, 3
    1336:	11 91       	ld	r17, Z+
    1338:	ef 01       	movw	r28, r30
    133a:	15 32       	cpi	r17, 0x25	; 37
    133c:	81 f4       	brne	.+32     	; 0x135e <vfscanf+0x78>
    133e:	c5 01       	movw	r24, r10
    1340:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    1344:	97 fd       	sbrc	r25, 7
    1346:	f5 c0       	rjmp	.+490    	; 0x1532 <vfscanf+0x24c>
    1348:	41 2f       	mov	r20, r17
    134a:	50 e0       	ldi	r21, 0x00	; 0
    134c:	9c 01       	movw	r18, r24
    134e:	33 27       	eor	r19, r19
    1350:	24 17       	cp	r18, r20
    1352:	35 07       	cpc	r19, r21
    1354:	a9 f2       	breq	.-86     	; 0x1300 <vfscanf+0x1a>
    1356:	b5 01       	movw	r22, r10
    1358:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
    135c:	ec c0       	rjmp	.+472    	; 0x1536 <vfscanf+0x250>
    135e:	1a 32       	cpi	r17, 0x2A	; 42
    1360:	41 f4       	brne	.+16     	; 0x1372 <vfscanf+0x8c>
    1362:	03 fd       	sbrc	r16, 3
    1364:	15 91       	lpm	r17, Z+
    1366:	03 ff       	sbrs	r16, 3
    1368:	11 91       	ld	r17, Z+
    136a:	ef 01       	movw	r28, r30
    136c:	77 24       	eor	r7, r7
    136e:	73 94       	inc	r7
    1370:	01 c0       	rjmp	.+2      	; 0x1374 <vfscanf+0x8e>
    1372:	71 2c       	mov	r7, r1
    1374:	e1 2c       	mov	r14, r1
    1376:	f1 2c       	mov	r15, r1
    1378:	20 ed       	ldi	r18, 0xD0	; 208
    137a:	21 0f       	add	r18, r17
    137c:	2a 30       	cpi	r18, 0x0A	; 10
    137e:	88 f4       	brcc	.+34     	; 0x13a2 <vfscanf+0xbc>
    1380:	f7 2d       	mov	r31, r7
    1382:	f2 60       	ori	r31, 0x02	; 2
    1384:	7f 2e       	mov	r7, r31
    1386:	b7 01       	movw	r22, r14
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	40 e2       	ldi	r20, 0x20	; 32
    138e:	0e 94 a3 06 	call	0xd46	; 0xd46 <mulacc>
    1392:	7b 01       	movw	r14, r22
    1394:	fe 01       	movw	r30, r28
    1396:	03 fd       	sbrc	r16, 3
    1398:	15 91       	lpm	r17, Z+
    139a:	03 ff       	sbrs	r16, 3
    139c:	11 91       	ld	r17, Z+
    139e:	ef 01       	movw	r28, r30
    13a0:	eb cf       	rjmp	.-42     	; 0x1378 <vfscanf+0x92>
    13a2:	71 fe       	sbrs	r7, 1
    13a4:	04 c0       	rjmp	.+8      	; 0x13ae <vfscanf+0xc8>
    13a6:	e1 14       	cp	r14, r1
    13a8:	f1 04       	cpc	r15, r1
    13aa:	21 f4       	brne	.+8      	; 0x13b4 <vfscanf+0xce>
    13ac:	c4 c0       	rjmp	.+392    	; 0x1536 <vfscanf+0x250>
    13ae:	ee 24       	eor	r14, r14
    13b0:	ea 94       	dec	r14
    13b2:	fe 2c       	mov	r15, r14
    13b4:	18 36       	cpi	r17, 0x68	; 104
    13b6:	19 f0       	breq	.+6      	; 0x13be <vfscanf+0xd8>
    13b8:	1c 36       	cpi	r17, 0x6C	; 108
    13ba:	61 f0       	breq	.+24     	; 0x13d4 <vfscanf+0xee>
    13bc:	14 c0       	rjmp	.+40     	; 0x13e6 <vfscanf+0x100>
    13be:	fe 01       	movw	r30, r28
    13c0:	03 fd       	sbrc	r16, 3
    13c2:	15 91       	lpm	r17, Z+
    13c4:	03 ff       	sbrs	r16, 3
    13c6:	11 91       	ld	r17, Z+
    13c8:	ef 01       	movw	r28, r30
    13ca:	18 36       	cpi	r17, 0x68	; 104
    13cc:	61 f4       	brne	.+24     	; 0x13e6 <vfscanf+0x100>
    13ce:	87 2d       	mov	r24, r7
    13d0:	88 60       	ori	r24, 0x08	; 8
    13d2:	78 2e       	mov	r7, r24
    13d4:	97 2d       	mov	r25, r7
    13d6:	94 60       	ori	r25, 0x04	; 4
    13d8:	79 2e       	mov	r7, r25
    13da:	fe 01       	movw	r30, r28
    13dc:	03 fd       	sbrc	r16, 3
    13de:	15 91       	lpm	r17, Z+
    13e0:	03 ff       	sbrs	r16, 3
    13e2:	11 91       	ld	r17, Z+
    13e4:	ef 01       	movw	r28, r30
    13e6:	11 23       	and	r17, r17
    13e8:	09 f4       	brne	.+2      	; 0x13ec <vfscanf+0x106>
    13ea:	a5 c0       	rjmp	.+330    	; 0x1536 <vfscanf+0x250>
    13ec:	61 2f       	mov	r22, r17
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	8a e6       	ldi	r24, 0x6A	; 106
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	0e 94 c0 0c 	call	0x1980	; 0x1980 <strchr_P>
    13f8:	89 2b       	or	r24, r25
    13fa:	09 f4       	brne	.+2      	; 0x13fe <vfscanf+0x118>
    13fc:	9c c0       	rjmp	.+312    	; 0x1536 <vfscanf+0x250>
    13fe:	70 fc       	sbrc	r7, 0
    1400:	07 c0       	rjmp	.+14     	; 0x1410 <vfscanf+0x12a>
    1402:	f4 01       	movw	r30, r8
    1404:	c0 80       	ld	r12, Z
    1406:	d1 80       	ldd	r13, Z+1	; 0x01
    1408:	c4 01       	movw	r24, r8
    140a:	02 96       	adiw	r24, 0x02	; 2
    140c:	4c 01       	movw	r8, r24
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <vfscanf+0x12e>
    1410:	c1 2c       	mov	r12, r1
    1412:	d1 2c       	mov	r13, r1
    1414:	1e 36       	cpi	r17, 0x6E	; 110
    1416:	51 f4       	brne	.+20     	; 0x142c <vfscanf+0x146>
    1418:	f5 01       	movw	r30, r10
    141a:	46 81       	ldd	r20, Z+6	; 0x06
    141c:	57 81       	ldd	r21, Z+7	; 0x07
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	70 e0       	ldi	r23, 0x00	; 0
    1422:	27 2d       	mov	r18, r7
    1424:	c6 01       	movw	r24, r12
    1426:	0e 94 97 06 	call	0xd2e	; 0xd2e <putval>
    142a:	6a cf       	rjmp	.-300    	; 0x1300 <vfscanf+0x1a>
    142c:	13 36       	cpi	r17, 0x63	; 99
    142e:	b9 f4       	brne	.+46     	; 0x145e <vfscanf+0x178>
    1430:	71 fc       	sbrc	r7, 1
    1432:	03 c0       	rjmp	.+6      	; 0x143a <vfscanf+0x154>
    1434:	ee 24       	eor	r14, r14
    1436:	e3 94       	inc	r14
    1438:	f1 2c       	mov	r15, r1
    143a:	c5 01       	movw	r24, r10
    143c:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    1440:	97 fd       	sbrc	r25, 7
    1442:	77 c0       	rjmp	.+238    	; 0x1532 <vfscanf+0x24c>
    1444:	c1 14       	cp	r12, r1
    1446:	d1 04       	cpc	r13, r1
    1448:	29 f0       	breq	.+10     	; 0x1454 <vfscanf+0x16e>
    144a:	f6 01       	movw	r30, r12
    144c:	80 83       	st	Z, r24
    144e:	c6 01       	movw	r24, r12
    1450:	01 96       	adiw	r24, 0x01	; 1
    1452:	6c 01       	movw	r12, r24
    1454:	91 e0       	ldi	r25, 0x01	; 1
    1456:	e9 1a       	sub	r14, r25
    1458:	f1 08       	sbc	r15, r1
    145a:	79 f7       	brne	.-34     	; 0x143a <vfscanf+0x154>
    145c:	66 c0       	rjmp	.+204    	; 0x152a <vfscanf+0x244>
    145e:	1b 35       	cpi	r17, 0x5B	; 91
    1460:	59 f4       	brne	.+22     	; 0x1478 <vfscanf+0x192>
    1462:	9e 01       	movw	r18, r28
    1464:	a6 01       	movw	r20, r12
    1466:	b7 01       	movw	r22, r14
    1468:	c5 01       	movw	r24, r10
    146a:	0e 94 6d 07 	call	0xeda	; 0xeda <conv_brk>
    146e:	ec 01       	movw	r28, r24
    1470:	89 2b       	or	r24, r25
    1472:	09 f0       	breq	.+2      	; 0x1476 <vfscanf+0x190>
    1474:	5a c0       	rjmp	.+180    	; 0x152a <vfscanf+0x244>
    1476:	54 c0       	rjmp	.+168    	; 0x1520 <vfscanf+0x23a>
    1478:	c5 01       	movw	r24, r10
    147a:	0e 94 ca 06 	call	0xd94	; 0xd94 <skip_spaces>
    147e:	97 fd       	sbrc	r25, 7
    1480:	58 c0       	rjmp	.+176    	; 0x1532 <vfscanf+0x24c>
    1482:	1f 36       	cpi	r17, 0x6F	; 111
    1484:	e1 f1       	breq	.+120    	; 0x14fe <vfscanf+0x218>
    1486:	40 f4       	brcc	.+16     	; 0x1498 <vfscanf+0x1b2>
    1488:	14 36       	cpi	r17, 0x64	; 100
    148a:	a9 f1       	breq	.+106    	; 0x14f6 <vfscanf+0x210>
    148c:	19 36       	cpi	r17, 0x69	; 105
    148e:	d1 f1       	breq	.+116    	; 0x1504 <vfscanf+0x21e>
    1490:	18 35       	cpi	r17, 0x58	; 88
    1492:	09 f0       	breq	.+2      	; 0x1496 <vfscanf+0x1b0>
    1494:	3e c0       	rjmp	.+124    	; 0x1512 <vfscanf+0x22c>
    1496:	2b c0       	rjmp	.+86     	; 0x14ee <vfscanf+0x208>
    1498:	13 37       	cpi	r17, 0x73	; 115
    149a:	a9 f0       	breq	.+42     	; 0x14c6 <vfscanf+0x1e0>
    149c:	18 f4       	brcc	.+6      	; 0x14a4 <vfscanf+0x1be>
    149e:	10 37       	cpi	r17, 0x70	; 112
    14a0:	31 f1       	breq	.+76     	; 0x14ee <vfscanf+0x208>
    14a2:	37 c0       	rjmp	.+110    	; 0x1512 <vfscanf+0x22c>
    14a4:	15 37       	cpi	r17, 0x75	; 117
    14a6:	39 f1       	breq	.+78     	; 0x14f6 <vfscanf+0x210>
    14a8:	18 37       	cpi	r17, 0x78	; 120
    14aa:	09 f1       	breq	.+66     	; 0x14ee <vfscanf+0x208>
    14ac:	32 c0       	rjmp	.+100    	; 0x1512 <vfscanf+0x22c>
    14ae:	c1 14       	cp	r12, r1
    14b0:	d1 04       	cpc	r13, r1
    14b2:	29 f0       	breq	.+10     	; 0x14be <vfscanf+0x1d8>
    14b4:	f6 01       	movw	r30, r12
    14b6:	00 83       	st	Z, r16
    14b8:	c6 01       	movw	r24, r12
    14ba:	01 96       	adiw	r24, 0x01	; 1
    14bc:	6c 01       	movw	r12, r24
    14be:	91 e0       	ldi	r25, 0x01	; 1
    14c0:	e9 1a       	sub	r14, r25
    14c2:	f1 08       	sbc	r15, r1
    14c4:	71 f0       	breq	.+28     	; 0x14e2 <vfscanf+0x1fc>
    14c6:	c5 01       	movw	r24, r10
    14c8:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <fgetc>
    14cc:	8c 01       	movw	r16, r24
    14ce:	97 fd       	sbrc	r25, 7
    14d0:	08 c0       	rjmp	.+16     	; 0x14e2 <vfscanf+0x1fc>
    14d2:	0e 94 af 0c 	call	0x195e	; 0x195e <isspace>
    14d6:	89 2b       	or	r24, r25
    14d8:	51 f3       	breq	.-44     	; 0x14ae <vfscanf+0x1c8>
    14da:	b5 01       	movw	r22, r10
    14dc:	c8 01       	movw	r24, r16
    14de:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <ungetc>
    14e2:	c1 14       	cp	r12, r1
    14e4:	d1 04       	cpc	r13, r1
    14e6:	09 f1       	breq	.+66     	; 0x152a <vfscanf+0x244>
    14e8:	f6 01       	movw	r30, r12
    14ea:	10 82       	st	Z, r1
    14ec:	1e c0       	rjmp	.+60     	; 0x152a <vfscanf+0x244>
    14ee:	f7 2d       	mov	r31, r7
    14f0:	f0 64       	ori	r31, 0x40	; 64
    14f2:	7f 2e       	mov	r7, r31
    14f4:	07 c0       	rjmp	.+14     	; 0x1504 <vfscanf+0x21e>
    14f6:	87 2d       	mov	r24, r7
    14f8:	80 62       	ori	r24, 0x20	; 32
    14fa:	78 2e       	mov	r7, r24
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <vfscanf+0x21e>
    14fe:	97 2d       	mov	r25, r7
    1500:	90 61       	ori	r25, 0x10	; 16
    1502:	79 2e       	mov	r7, r25
    1504:	27 2d       	mov	r18, r7
    1506:	a6 01       	movw	r20, r12
    1508:	b7 01       	movw	r22, r14
    150a:	c5 01       	movw	r24, r10
    150c:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <conv_int>
    1510:	05 c0       	rjmp	.+10     	; 0x151c <vfscanf+0x236>
    1512:	a6 01       	movw	r20, r12
    1514:	b7 01       	movw	r22, r14
    1516:	c5 01       	movw	r24, r10
    1518:	0e 94 2f 08 	call	0x105e	; 0x105e <conv_flt>
    151c:	81 11       	cpse	r24, r1
    151e:	05 c0       	rjmp	.+10     	; 0x152a <vfscanf+0x244>
    1520:	f5 01       	movw	r30, r10
    1522:	83 81       	ldd	r24, Z+3	; 0x03
    1524:	80 73       	andi	r24, 0x30	; 48
    1526:	29 f4       	brne	.+10     	; 0x1532 <vfscanf+0x24c>
    1528:	06 c0       	rjmp	.+12     	; 0x1536 <vfscanf+0x250>
    152a:	70 fc       	sbrc	r7, 0
    152c:	e9 ce       	rjmp	.-558    	; 0x1300 <vfscanf+0x1a>
    152e:	63 94       	inc	r6
    1530:	e7 ce       	rjmp	.-562    	; 0x1300 <vfscanf+0x1a>
    1532:	66 20       	and	r6, r6
    1534:	19 f0       	breq	.+6      	; 0x153c <vfscanf+0x256>
    1536:	86 2d       	mov	r24, r6
    1538:	90 e0       	ldi	r25, 0x00	; 0
    153a:	02 c0       	rjmp	.+4      	; 0x1540 <vfscanf+0x25a>
    153c:	8f ef       	ldi	r24, 0xFF	; 255
    153e:	9f ef       	ldi	r25, 0xFF	; 255
    1540:	cd b7       	in	r28, 0x3d	; 61
    1542:	de b7       	in	r29, 0x3e	; 62
    1544:	ee e0       	ldi	r30, 0x0E	; 14
    1546:	0c 94 c0 0b 	jmp	0x1780	; 0x1780 <__epilogue_restores__+0x8>

0000154a <__floatunsisf>:
    154a:	e8 94       	clt
    154c:	09 c0       	rjmp	.+18     	; 0x1560 <__floatsisf+0x12>

0000154e <__floatsisf>:
    154e:	97 fb       	bst	r25, 7
    1550:	3e f4       	brtc	.+14     	; 0x1560 <__floatsisf+0x12>
    1552:	90 95       	com	r25
    1554:	80 95       	com	r24
    1556:	70 95       	com	r23
    1558:	61 95       	neg	r22
    155a:	7f 4f       	sbci	r23, 0xFF	; 255
    155c:	8f 4f       	sbci	r24, 0xFF	; 255
    155e:	9f 4f       	sbci	r25, 0xFF	; 255
    1560:	99 23       	and	r25, r25
    1562:	a9 f0       	breq	.+42     	; 0x158e <__floatsisf+0x40>
    1564:	f9 2f       	mov	r31, r25
    1566:	96 e9       	ldi	r25, 0x96	; 150
    1568:	bb 27       	eor	r27, r27
    156a:	93 95       	inc	r25
    156c:	f6 95       	lsr	r31
    156e:	87 95       	ror	r24
    1570:	77 95       	ror	r23
    1572:	67 95       	ror	r22
    1574:	b7 95       	ror	r27
    1576:	f1 11       	cpse	r31, r1
    1578:	f8 cf       	rjmp	.-16     	; 0x156a <__floatsisf+0x1c>
    157a:	fa f4       	brpl	.+62     	; 0x15ba <__floatsisf+0x6c>
    157c:	bb 0f       	add	r27, r27
    157e:	11 f4       	brne	.+4      	; 0x1584 <__floatsisf+0x36>
    1580:	60 ff       	sbrs	r22, 0
    1582:	1b c0       	rjmp	.+54     	; 0x15ba <__floatsisf+0x6c>
    1584:	6f 5f       	subi	r22, 0xFF	; 255
    1586:	7f 4f       	sbci	r23, 0xFF	; 255
    1588:	8f 4f       	sbci	r24, 0xFF	; 255
    158a:	9f 4f       	sbci	r25, 0xFF	; 255
    158c:	16 c0       	rjmp	.+44     	; 0x15ba <__floatsisf+0x6c>
    158e:	88 23       	and	r24, r24
    1590:	11 f0       	breq	.+4      	; 0x1596 <__floatsisf+0x48>
    1592:	96 e9       	ldi	r25, 0x96	; 150
    1594:	11 c0       	rjmp	.+34     	; 0x15b8 <__floatsisf+0x6a>
    1596:	77 23       	and	r23, r23
    1598:	21 f0       	breq	.+8      	; 0x15a2 <__floatsisf+0x54>
    159a:	9e e8       	ldi	r25, 0x8E	; 142
    159c:	87 2f       	mov	r24, r23
    159e:	76 2f       	mov	r23, r22
    15a0:	05 c0       	rjmp	.+10     	; 0x15ac <__floatsisf+0x5e>
    15a2:	66 23       	and	r22, r22
    15a4:	71 f0       	breq	.+28     	; 0x15c2 <__floatsisf+0x74>
    15a6:	96 e8       	ldi	r25, 0x86	; 134
    15a8:	86 2f       	mov	r24, r22
    15aa:	70 e0       	ldi	r23, 0x00	; 0
    15ac:	60 e0       	ldi	r22, 0x00	; 0
    15ae:	2a f0       	brmi	.+10     	; 0x15ba <__floatsisf+0x6c>
    15b0:	9a 95       	dec	r25
    15b2:	66 0f       	add	r22, r22
    15b4:	77 1f       	adc	r23, r23
    15b6:	88 1f       	adc	r24, r24
    15b8:	da f7       	brpl	.-10     	; 0x15b0 <__floatsisf+0x62>
    15ba:	88 0f       	add	r24, r24
    15bc:	96 95       	lsr	r25
    15be:	87 95       	ror	r24
    15c0:	97 f9       	bld	r25, 7
    15c2:	08 95       	ret

000015c4 <__mulsf3>:
    15c4:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__mulsf3x>
    15c8:	0c 94 66 0b 	jmp	0x16cc	; 0x16cc <__fp_round>
    15cc:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <__fp_pscA>
    15d0:	38 f0       	brcs	.+14     	; 0x15e0 <__mulsf3+0x1c>
    15d2:	0e 94 5f 0b 	call	0x16be	; 0x16be <__fp_pscB>
    15d6:	20 f0       	brcs	.+8      	; 0x15e0 <__mulsf3+0x1c>
    15d8:	95 23       	and	r25, r21
    15da:	11 f0       	breq	.+4      	; 0x15e0 <__mulsf3+0x1c>
    15dc:	0c 94 4f 0b 	jmp	0x169e	; 0x169e <__fp_inf>
    15e0:	0c 94 55 0b 	jmp	0x16aa	; 0x16aa <__fp_nan>
    15e4:	11 24       	eor	r1, r1
    15e6:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__fp_szero>

000015ea <__mulsf3x>:
    15ea:	0e 94 77 0b 	call	0x16ee	; 0x16ee <__fp_split3>
    15ee:	70 f3       	brcs	.-36     	; 0x15cc <__mulsf3+0x8>

000015f0 <__mulsf3_pse>:
    15f0:	95 9f       	mul	r25, r21
    15f2:	c1 f3       	breq	.-16     	; 0x15e4 <__mulsf3+0x20>
    15f4:	95 0f       	add	r25, r21
    15f6:	50 e0       	ldi	r21, 0x00	; 0
    15f8:	55 1f       	adc	r21, r21
    15fa:	62 9f       	mul	r22, r18
    15fc:	f0 01       	movw	r30, r0
    15fe:	72 9f       	mul	r23, r18
    1600:	bb 27       	eor	r27, r27
    1602:	f0 0d       	add	r31, r0
    1604:	b1 1d       	adc	r27, r1
    1606:	63 9f       	mul	r22, r19
    1608:	aa 27       	eor	r26, r26
    160a:	f0 0d       	add	r31, r0
    160c:	b1 1d       	adc	r27, r1
    160e:	aa 1f       	adc	r26, r26
    1610:	64 9f       	mul	r22, r20
    1612:	66 27       	eor	r22, r22
    1614:	b0 0d       	add	r27, r0
    1616:	a1 1d       	adc	r26, r1
    1618:	66 1f       	adc	r22, r22
    161a:	82 9f       	mul	r24, r18
    161c:	22 27       	eor	r18, r18
    161e:	b0 0d       	add	r27, r0
    1620:	a1 1d       	adc	r26, r1
    1622:	62 1f       	adc	r22, r18
    1624:	73 9f       	mul	r23, r19
    1626:	b0 0d       	add	r27, r0
    1628:	a1 1d       	adc	r26, r1
    162a:	62 1f       	adc	r22, r18
    162c:	83 9f       	mul	r24, r19
    162e:	a0 0d       	add	r26, r0
    1630:	61 1d       	adc	r22, r1
    1632:	22 1f       	adc	r18, r18
    1634:	74 9f       	mul	r23, r20
    1636:	33 27       	eor	r19, r19
    1638:	a0 0d       	add	r26, r0
    163a:	61 1d       	adc	r22, r1
    163c:	23 1f       	adc	r18, r19
    163e:	84 9f       	mul	r24, r20
    1640:	60 0d       	add	r22, r0
    1642:	21 1d       	adc	r18, r1
    1644:	82 2f       	mov	r24, r18
    1646:	76 2f       	mov	r23, r22
    1648:	6a 2f       	mov	r22, r26
    164a:	11 24       	eor	r1, r1
    164c:	9f 57       	subi	r25, 0x7F	; 127
    164e:	50 40       	sbci	r21, 0x00	; 0
    1650:	9a f0       	brmi	.+38     	; 0x1678 <__mulsf3_pse+0x88>
    1652:	f1 f0       	breq	.+60     	; 0x1690 <__mulsf3_pse+0xa0>
    1654:	88 23       	and	r24, r24
    1656:	4a f0       	brmi	.+18     	; 0x166a <__mulsf3_pse+0x7a>
    1658:	ee 0f       	add	r30, r30
    165a:	ff 1f       	adc	r31, r31
    165c:	bb 1f       	adc	r27, r27
    165e:	66 1f       	adc	r22, r22
    1660:	77 1f       	adc	r23, r23
    1662:	88 1f       	adc	r24, r24
    1664:	91 50       	subi	r25, 0x01	; 1
    1666:	50 40       	sbci	r21, 0x00	; 0
    1668:	a9 f7       	brne	.-22     	; 0x1654 <__mulsf3_pse+0x64>
    166a:	9e 3f       	cpi	r25, 0xFE	; 254
    166c:	51 05       	cpc	r21, r1
    166e:	80 f0       	brcs	.+32     	; 0x1690 <__mulsf3_pse+0xa0>
    1670:	0c 94 4f 0b 	jmp	0x169e	; 0x169e <__fp_inf>
    1674:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__fp_szero>
    1678:	5f 3f       	cpi	r21, 0xFF	; 255
    167a:	e4 f3       	brlt	.-8      	; 0x1674 <__mulsf3_pse+0x84>
    167c:	98 3e       	cpi	r25, 0xE8	; 232
    167e:	d4 f3       	brlt	.-12     	; 0x1674 <__mulsf3_pse+0x84>
    1680:	86 95       	lsr	r24
    1682:	77 95       	ror	r23
    1684:	67 95       	ror	r22
    1686:	b7 95       	ror	r27
    1688:	f7 95       	ror	r31
    168a:	e7 95       	ror	r30
    168c:	9f 5f       	subi	r25, 0xFF	; 255
    168e:	c1 f7       	brne	.-16     	; 0x1680 <__mulsf3_pse+0x90>
    1690:	fe 2b       	or	r31, r30
    1692:	88 0f       	add	r24, r24
    1694:	91 1d       	adc	r25, r1
    1696:	96 95       	lsr	r25
    1698:	87 95       	ror	r24
    169a:	97 f9       	bld	r25, 7
    169c:	08 95       	ret

0000169e <__fp_inf>:
    169e:	97 f9       	bld	r25, 7
    16a0:	9f 67       	ori	r25, 0x7F	; 127
    16a2:	80 e8       	ldi	r24, 0x80	; 128
    16a4:	70 e0       	ldi	r23, 0x00	; 0
    16a6:	60 e0       	ldi	r22, 0x00	; 0
    16a8:	08 95       	ret

000016aa <__fp_nan>:
    16aa:	9f ef       	ldi	r25, 0xFF	; 255
    16ac:	80 ec       	ldi	r24, 0xC0	; 192
    16ae:	08 95       	ret

000016b0 <__fp_pscA>:
    16b0:	00 24       	eor	r0, r0
    16b2:	0a 94       	dec	r0
    16b4:	16 16       	cp	r1, r22
    16b6:	17 06       	cpc	r1, r23
    16b8:	18 06       	cpc	r1, r24
    16ba:	09 06       	cpc	r0, r25
    16bc:	08 95       	ret

000016be <__fp_pscB>:
    16be:	00 24       	eor	r0, r0
    16c0:	0a 94       	dec	r0
    16c2:	12 16       	cp	r1, r18
    16c4:	13 06       	cpc	r1, r19
    16c6:	14 06       	cpc	r1, r20
    16c8:	05 06       	cpc	r0, r21
    16ca:	08 95       	ret

000016cc <__fp_round>:
    16cc:	09 2e       	mov	r0, r25
    16ce:	03 94       	inc	r0
    16d0:	00 0c       	add	r0, r0
    16d2:	11 f4       	brne	.+4      	; 0x16d8 <__fp_round+0xc>
    16d4:	88 23       	and	r24, r24
    16d6:	52 f0       	brmi	.+20     	; 0x16ec <__fp_round+0x20>
    16d8:	bb 0f       	add	r27, r27
    16da:	40 f4       	brcc	.+16     	; 0x16ec <__fp_round+0x20>
    16dc:	bf 2b       	or	r27, r31
    16de:	11 f4       	brne	.+4      	; 0x16e4 <__fp_round+0x18>
    16e0:	60 ff       	sbrs	r22, 0
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <__fp_round+0x20>
    16e4:	6f 5f       	subi	r22, 0xFF	; 255
    16e6:	7f 4f       	sbci	r23, 0xFF	; 255
    16e8:	8f 4f       	sbci	r24, 0xFF	; 255
    16ea:	9f 4f       	sbci	r25, 0xFF	; 255
    16ec:	08 95       	ret

000016ee <__fp_split3>:
    16ee:	57 fd       	sbrc	r21, 7
    16f0:	90 58       	subi	r25, 0x80	; 128
    16f2:	44 0f       	add	r20, r20
    16f4:	55 1f       	adc	r21, r21
    16f6:	59 f0       	breq	.+22     	; 0x170e <__fp_splitA+0x10>
    16f8:	5f 3f       	cpi	r21, 0xFF	; 255
    16fa:	71 f0       	breq	.+28     	; 0x1718 <__fp_splitA+0x1a>
    16fc:	47 95       	ror	r20

000016fe <__fp_splitA>:
    16fe:	88 0f       	add	r24, r24
    1700:	97 fb       	bst	r25, 7
    1702:	99 1f       	adc	r25, r25
    1704:	61 f0       	breq	.+24     	; 0x171e <__fp_splitA+0x20>
    1706:	9f 3f       	cpi	r25, 0xFF	; 255
    1708:	79 f0       	breq	.+30     	; 0x1728 <__fp_splitA+0x2a>
    170a:	87 95       	ror	r24
    170c:	08 95       	ret
    170e:	12 16       	cp	r1, r18
    1710:	13 06       	cpc	r1, r19
    1712:	14 06       	cpc	r1, r20
    1714:	55 1f       	adc	r21, r21
    1716:	f2 cf       	rjmp	.-28     	; 0x16fc <__fp_split3+0xe>
    1718:	46 95       	lsr	r20
    171a:	f1 df       	rcall	.-30     	; 0x16fe <__fp_splitA>
    171c:	08 c0       	rjmp	.+16     	; 0x172e <__fp_splitA+0x30>
    171e:	16 16       	cp	r1, r22
    1720:	17 06       	cpc	r1, r23
    1722:	18 06       	cpc	r1, r24
    1724:	99 1f       	adc	r25, r25
    1726:	f1 cf       	rjmp	.-30     	; 0x170a <__fp_splitA+0xc>
    1728:	86 95       	lsr	r24
    172a:	71 05       	cpc	r23, r1
    172c:	61 05       	cpc	r22, r1
    172e:	08 94       	sec
    1730:	08 95       	ret

00001732 <__fp_zero>:
    1732:	e8 94       	clt

00001734 <__fp_szero>:
    1734:	bb 27       	eor	r27, r27
    1736:	66 27       	eor	r22, r22
    1738:	77 27       	eor	r23, r23
    173a:	cb 01       	movw	r24, r22
    173c:	97 f9       	bld	r25, 7
    173e:	08 95       	ret

00001740 <__prologue_saves__>:
    1740:	2f 92       	push	r2
    1742:	3f 92       	push	r3
    1744:	4f 92       	push	r4
    1746:	5f 92       	push	r5
    1748:	6f 92       	push	r6
    174a:	7f 92       	push	r7
    174c:	8f 92       	push	r8
    174e:	9f 92       	push	r9
    1750:	af 92       	push	r10
    1752:	bf 92       	push	r11
    1754:	cf 92       	push	r12
    1756:	df 92       	push	r13
    1758:	ef 92       	push	r14
    175a:	ff 92       	push	r15
    175c:	0f 93       	push	r16
    175e:	1f 93       	push	r17
    1760:	cf 93       	push	r28
    1762:	df 93       	push	r29
    1764:	cd b7       	in	r28, 0x3d	; 61
    1766:	de b7       	in	r29, 0x3e	; 62
    1768:	ca 1b       	sub	r28, r26
    176a:	db 0b       	sbc	r29, r27
    176c:	0f b6       	in	r0, 0x3f	; 63
    176e:	f8 94       	cli
    1770:	de bf       	out	0x3e, r29	; 62
    1772:	0f be       	out	0x3f, r0	; 63
    1774:	cd bf       	out	0x3d, r28	; 61
    1776:	09 94       	ijmp

00001778 <__epilogue_restores__>:
    1778:	2a 88       	ldd	r2, Y+18	; 0x12
    177a:	39 88       	ldd	r3, Y+17	; 0x11
    177c:	48 88       	ldd	r4, Y+16	; 0x10
    177e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1780:	6e 84       	ldd	r6, Y+14	; 0x0e
    1782:	7d 84       	ldd	r7, Y+13	; 0x0d
    1784:	8c 84       	ldd	r8, Y+12	; 0x0c
    1786:	9b 84       	ldd	r9, Y+11	; 0x0b
    1788:	aa 84       	ldd	r10, Y+10	; 0x0a
    178a:	b9 84       	ldd	r11, Y+9	; 0x09
    178c:	c8 84       	ldd	r12, Y+8	; 0x08
    178e:	df 80       	ldd	r13, Y+7	; 0x07
    1790:	ee 80       	ldd	r14, Y+6	; 0x06
    1792:	fd 80       	ldd	r15, Y+5	; 0x05
    1794:	0c 81       	ldd	r16, Y+4	; 0x04
    1796:	1b 81       	ldd	r17, Y+3	; 0x03
    1798:	aa 81       	ldd	r26, Y+2	; 0x02
    179a:	b9 81       	ldd	r27, Y+1	; 0x01
    179c:	ce 0f       	add	r28, r30
    179e:	d1 1d       	adc	r29, r1
    17a0:	0f b6       	in	r0, 0x3f	; 63
    17a2:	f8 94       	cli
    17a4:	de bf       	out	0x3e, r29	; 62
    17a6:	0f be       	out	0x3f, r0	; 63
    17a8:	cd bf       	out	0x3d, r28	; 61
    17aa:	ed 01       	movw	r28, r26
    17ac:	08 95       	ret

000017ae <__ftoa_engine>:
    17ae:	28 30       	cpi	r18, 0x08	; 8
    17b0:	08 f0       	brcs	.+2      	; 0x17b4 <__ftoa_engine+0x6>
    17b2:	27 e0       	ldi	r18, 0x07	; 7
    17b4:	33 27       	eor	r19, r19
    17b6:	da 01       	movw	r26, r20
    17b8:	99 0f       	add	r25, r25
    17ba:	31 1d       	adc	r19, r1
    17bc:	87 fd       	sbrc	r24, 7
    17be:	91 60       	ori	r25, 0x01	; 1
    17c0:	00 96       	adiw	r24, 0x00	; 0
    17c2:	61 05       	cpc	r22, r1
    17c4:	71 05       	cpc	r23, r1
    17c6:	39 f4       	brne	.+14     	; 0x17d6 <__ftoa_engine+0x28>
    17c8:	32 60       	ori	r19, 0x02	; 2
    17ca:	2e 5f       	subi	r18, 0xFE	; 254
    17cc:	3d 93       	st	X+, r19
    17ce:	30 e3       	ldi	r19, 0x30	; 48
    17d0:	2a 95       	dec	r18
    17d2:	e1 f7       	brne	.-8      	; 0x17cc <__ftoa_engine+0x1e>
    17d4:	08 95       	ret
    17d6:	9f 3f       	cpi	r25, 0xFF	; 255
    17d8:	30 f0       	brcs	.+12     	; 0x17e6 <__ftoa_engine+0x38>
    17da:	80 38       	cpi	r24, 0x80	; 128
    17dc:	71 05       	cpc	r23, r1
    17de:	61 05       	cpc	r22, r1
    17e0:	09 f0       	breq	.+2      	; 0x17e4 <__ftoa_engine+0x36>
    17e2:	3c 5f       	subi	r19, 0xFC	; 252
    17e4:	3c 5f       	subi	r19, 0xFC	; 252
    17e6:	3d 93       	st	X+, r19
    17e8:	91 30       	cpi	r25, 0x01	; 1
    17ea:	08 f0       	brcs	.+2      	; 0x17ee <__ftoa_engine+0x40>
    17ec:	80 68       	ori	r24, 0x80	; 128
    17ee:	91 1d       	adc	r25, r1
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	1f 93       	push	r17
    17f6:	0f 93       	push	r16
    17f8:	ff 92       	push	r15
    17fa:	ef 92       	push	r14
    17fc:	19 2f       	mov	r17, r25
    17fe:	98 7f       	andi	r25, 0xF8	; 248
    1800:	96 95       	lsr	r25
    1802:	e9 2f       	mov	r30, r25
    1804:	96 95       	lsr	r25
    1806:	96 95       	lsr	r25
    1808:	e9 0f       	add	r30, r25
    180a:	ff 27       	eor	r31, r31
    180c:	e6 53       	subi	r30, 0x36	; 54
    180e:	ff 4f       	sbci	r31, 0xFF	; 255
    1810:	99 27       	eor	r25, r25
    1812:	33 27       	eor	r19, r19
    1814:	ee 24       	eor	r14, r14
    1816:	ff 24       	eor	r15, r15
    1818:	a7 01       	movw	r20, r14
    181a:	e7 01       	movw	r28, r14
    181c:	05 90       	lpm	r0, Z+
    181e:	08 94       	sec
    1820:	07 94       	ror	r0
    1822:	28 f4       	brcc	.+10     	; 0x182e <__ftoa_engine+0x80>
    1824:	36 0f       	add	r19, r22
    1826:	e7 1e       	adc	r14, r23
    1828:	f8 1e       	adc	r15, r24
    182a:	49 1f       	adc	r20, r25
    182c:	51 1d       	adc	r21, r1
    182e:	66 0f       	add	r22, r22
    1830:	77 1f       	adc	r23, r23
    1832:	88 1f       	adc	r24, r24
    1834:	99 1f       	adc	r25, r25
    1836:	06 94       	lsr	r0
    1838:	a1 f7       	brne	.-24     	; 0x1822 <__ftoa_engine+0x74>
    183a:	05 90       	lpm	r0, Z+
    183c:	07 94       	ror	r0
    183e:	28 f4       	brcc	.+10     	; 0x184a <__ftoa_engine+0x9c>
    1840:	e7 0e       	add	r14, r23
    1842:	f8 1e       	adc	r15, r24
    1844:	49 1f       	adc	r20, r25
    1846:	56 1f       	adc	r21, r22
    1848:	c1 1d       	adc	r28, r1
    184a:	77 0f       	add	r23, r23
    184c:	88 1f       	adc	r24, r24
    184e:	99 1f       	adc	r25, r25
    1850:	66 1f       	adc	r22, r22
    1852:	06 94       	lsr	r0
    1854:	a1 f7       	brne	.-24     	; 0x183e <__ftoa_engine+0x90>
    1856:	05 90       	lpm	r0, Z+
    1858:	07 94       	ror	r0
    185a:	28 f4       	brcc	.+10     	; 0x1866 <__ftoa_engine+0xb8>
    185c:	f8 0e       	add	r15, r24
    185e:	49 1f       	adc	r20, r25
    1860:	56 1f       	adc	r21, r22
    1862:	c7 1f       	adc	r28, r23
    1864:	d1 1d       	adc	r29, r1
    1866:	88 0f       	add	r24, r24
    1868:	99 1f       	adc	r25, r25
    186a:	66 1f       	adc	r22, r22
    186c:	77 1f       	adc	r23, r23
    186e:	06 94       	lsr	r0
    1870:	a1 f7       	brne	.-24     	; 0x185a <__ftoa_engine+0xac>
    1872:	05 90       	lpm	r0, Z+
    1874:	07 94       	ror	r0
    1876:	20 f4       	brcc	.+8      	; 0x1880 <__ftoa_engine+0xd2>
    1878:	49 0f       	add	r20, r25
    187a:	56 1f       	adc	r21, r22
    187c:	c7 1f       	adc	r28, r23
    187e:	d8 1f       	adc	r29, r24
    1880:	99 0f       	add	r25, r25
    1882:	66 1f       	adc	r22, r22
    1884:	77 1f       	adc	r23, r23
    1886:	88 1f       	adc	r24, r24
    1888:	06 94       	lsr	r0
    188a:	a9 f7       	brne	.-22     	; 0x1876 <__ftoa_engine+0xc8>
    188c:	84 91       	lpm	r24, Z
    188e:	10 95       	com	r17
    1890:	17 70       	andi	r17, 0x07	; 7
    1892:	41 f0       	breq	.+16     	; 0x18a4 <__ftoa_engine+0xf6>
    1894:	d6 95       	lsr	r29
    1896:	c7 95       	ror	r28
    1898:	57 95       	ror	r21
    189a:	47 95       	ror	r20
    189c:	f7 94       	ror	r15
    189e:	e7 94       	ror	r14
    18a0:	1a 95       	dec	r17
    18a2:	c1 f7       	brne	.-16     	; 0x1894 <__ftoa_engine+0xe6>
    18a4:	e0 e7       	ldi	r30, 0x70	; 112
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	68 94       	set
    18aa:	15 90       	lpm	r1, Z+
    18ac:	15 91       	lpm	r17, Z+
    18ae:	35 91       	lpm	r19, Z+
    18b0:	65 91       	lpm	r22, Z+
    18b2:	95 91       	lpm	r25, Z+
    18b4:	05 90       	lpm	r0, Z+
    18b6:	7f e2       	ldi	r23, 0x2F	; 47
    18b8:	73 95       	inc	r23
    18ba:	e1 18       	sub	r14, r1
    18bc:	f1 0a       	sbc	r15, r17
    18be:	43 0b       	sbc	r20, r19
    18c0:	56 0b       	sbc	r21, r22
    18c2:	c9 0b       	sbc	r28, r25
    18c4:	d0 09       	sbc	r29, r0
    18c6:	c0 f7       	brcc	.-16     	; 0x18b8 <__ftoa_engine+0x10a>
    18c8:	e1 0c       	add	r14, r1
    18ca:	f1 1e       	adc	r15, r17
    18cc:	43 1f       	adc	r20, r19
    18ce:	56 1f       	adc	r21, r22
    18d0:	c9 1f       	adc	r28, r25
    18d2:	d0 1d       	adc	r29, r0
    18d4:	7e f4       	brtc	.+30     	; 0x18f4 <__ftoa_engine+0x146>
    18d6:	70 33       	cpi	r23, 0x30	; 48
    18d8:	11 f4       	brne	.+4      	; 0x18de <__ftoa_engine+0x130>
    18da:	8a 95       	dec	r24
    18dc:	e6 cf       	rjmp	.-52     	; 0x18aa <__ftoa_engine+0xfc>
    18de:	e8 94       	clt
    18e0:	01 50       	subi	r16, 0x01	; 1
    18e2:	30 f0       	brcs	.+12     	; 0x18f0 <__ftoa_engine+0x142>
    18e4:	08 0f       	add	r16, r24
    18e6:	0a f4       	brpl	.+2      	; 0x18ea <__ftoa_engine+0x13c>
    18e8:	00 27       	eor	r16, r16
    18ea:	02 17       	cp	r16, r18
    18ec:	08 f4       	brcc	.+2      	; 0x18f0 <__ftoa_engine+0x142>
    18ee:	20 2f       	mov	r18, r16
    18f0:	23 95       	inc	r18
    18f2:	02 2f       	mov	r16, r18
    18f4:	7a 33       	cpi	r23, 0x3A	; 58
    18f6:	28 f0       	brcs	.+10     	; 0x1902 <__ftoa_engine+0x154>
    18f8:	79 e3       	ldi	r23, 0x39	; 57
    18fa:	7d 93       	st	X+, r23
    18fc:	2a 95       	dec	r18
    18fe:	e9 f7       	brne	.-6      	; 0x18fa <__ftoa_engine+0x14c>
    1900:	10 c0       	rjmp	.+32     	; 0x1922 <__ftoa_engine+0x174>
    1902:	7d 93       	st	X+, r23
    1904:	2a 95       	dec	r18
    1906:	89 f6       	brne	.-94     	; 0x18aa <__ftoa_engine+0xfc>
    1908:	06 94       	lsr	r0
    190a:	97 95       	ror	r25
    190c:	67 95       	ror	r22
    190e:	37 95       	ror	r19
    1910:	17 95       	ror	r17
    1912:	17 94       	ror	r1
    1914:	e1 18       	sub	r14, r1
    1916:	f1 0a       	sbc	r15, r17
    1918:	43 0b       	sbc	r20, r19
    191a:	56 0b       	sbc	r21, r22
    191c:	c9 0b       	sbc	r28, r25
    191e:	d0 09       	sbc	r29, r0
    1920:	98 f0       	brcs	.+38     	; 0x1948 <__ftoa_engine+0x19a>
    1922:	23 95       	inc	r18
    1924:	7e 91       	ld	r23, -X
    1926:	73 95       	inc	r23
    1928:	7a 33       	cpi	r23, 0x3A	; 58
    192a:	08 f0       	brcs	.+2      	; 0x192e <__ftoa_engine+0x180>
    192c:	70 e3       	ldi	r23, 0x30	; 48
    192e:	7c 93       	st	X, r23
    1930:	20 13       	cpse	r18, r16
    1932:	b8 f7       	brcc	.-18     	; 0x1922 <__ftoa_engine+0x174>
    1934:	7e 91       	ld	r23, -X
    1936:	70 61       	ori	r23, 0x10	; 16
    1938:	7d 93       	st	X+, r23
    193a:	30 f0       	brcs	.+12     	; 0x1948 <__ftoa_engine+0x19a>
    193c:	83 95       	inc	r24
    193e:	71 e3       	ldi	r23, 0x31	; 49
    1940:	7d 93       	st	X+, r23
    1942:	70 e3       	ldi	r23, 0x30	; 48
    1944:	2a 95       	dec	r18
    1946:	e1 f7       	brne	.-8      	; 0x1940 <__ftoa_engine+0x192>
    1948:	11 24       	eor	r1, r1
    194a:	ef 90       	pop	r14
    194c:	ff 90       	pop	r15
    194e:	0f 91       	pop	r16
    1950:	1f 91       	pop	r17
    1952:	cf 91       	pop	r28
    1954:	df 91       	pop	r29
    1956:	99 27       	eor	r25, r25
    1958:	87 fd       	sbrc	r24, 7
    195a:	90 95       	com	r25
    195c:	08 95       	ret

0000195e <isspace>:
    195e:	91 11       	cpse	r25, r1
    1960:	0c 94 2e 0e 	jmp	0x1c5c	; 0x1c5c <__ctype_isfalse>
    1964:	80 32       	cpi	r24, 0x20	; 32
    1966:	19 f0       	breq	.+6      	; 0x196e <isspace+0x10>
    1968:	89 50       	subi	r24, 0x09	; 9
    196a:	85 50       	subi	r24, 0x05	; 5
    196c:	c8 f7       	brcc	.-14     	; 0x1960 <isspace+0x2>
    196e:	08 95       	ret

00001970 <tolower>:
    1970:	91 11       	cpse	r25, r1
    1972:	08 95       	ret
    1974:	81 54       	subi	r24, 0x41	; 65
    1976:	8a 51       	subi	r24, 0x1A	; 26
    1978:	08 f4       	brcc	.+2      	; 0x197c <tolower+0xc>
    197a:	80 5e       	subi	r24, 0xE0	; 224
    197c:	85 5a       	subi	r24, 0xA5	; 165
    197e:	08 95       	ret

00001980 <strchr_P>:
    1980:	fc 01       	movw	r30, r24
    1982:	05 90       	lpm	r0, Z+
    1984:	06 16       	cp	r0, r22
    1986:	21 f0       	breq	.+8      	; 0x1990 <strchr_P+0x10>
    1988:	00 20       	and	r0, r0
    198a:	d9 f7       	brne	.-10     	; 0x1982 <strchr_P+0x2>
    198c:	c0 01       	movw	r24, r0
    198e:	08 95       	ret
    1990:	31 97       	sbiw	r30, 0x01	; 1
    1992:	cf 01       	movw	r24, r30
    1994:	08 95       	ret

00001996 <strnlen_P>:
    1996:	fc 01       	movw	r30, r24
    1998:	05 90       	lpm	r0, Z+
    199a:	61 50       	subi	r22, 0x01	; 1
    199c:	70 40       	sbci	r23, 0x00	; 0
    199e:	01 10       	cpse	r0, r1
    19a0:	d8 f7       	brcc	.-10     	; 0x1998 <strnlen_P+0x2>
    19a2:	80 95       	com	r24
    19a4:	90 95       	com	r25
    19a6:	8e 0f       	add	r24, r30
    19a8:	9f 1f       	adc	r25, r31
    19aa:	08 95       	ret

000019ac <strnlen>:
    19ac:	fc 01       	movw	r30, r24
    19ae:	61 50       	subi	r22, 0x01	; 1
    19b0:	70 40       	sbci	r23, 0x00	; 0
    19b2:	01 90       	ld	r0, Z+
    19b4:	01 10       	cpse	r0, r1
    19b6:	d8 f7       	brcc	.-10     	; 0x19ae <strnlen+0x2>
    19b8:	80 95       	com	r24
    19ba:	90 95       	com	r25
    19bc:	8e 0f       	add	r24, r30
    19be:	9f 1f       	adc	r25, r31
    19c0:	08 95       	ret

000019c2 <fgetc>:
    19c2:	cf 93       	push	r28
    19c4:	df 93       	push	r29
    19c6:	ec 01       	movw	r28, r24
    19c8:	2b 81       	ldd	r18, Y+3	; 0x03
    19ca:	20 ff       	sbrs	r18, 0
    19cc:	33 c0       	rjmp	.+102    	; 0x1a34 <fgetc+0x72>
    19ce:	26 ff       	sbrs	r18, 6
    19d0:	0a c0       	rjmp	.+20     	; 0x19e6 <fgetc+0x24>
    19d2:	2f 7b       	andi	r18, 0xBF	; 191
    19d4:	2b 83       	std	Y+3, r18	; 0x03
    19d6:	8e 81       	ldd	r24, Y+6	; 0x06
    19d8:	9f 81       	ldd	r25, Y+7	; 0x07
    19da:	01 96       	adiw	r24, 0x01	; 1
    19dc:	9f 83       	std	Y+7, r25	; 0x07
    19de:	8e 83       	std	Y+6, r24	; 0x06
    19e0:	8a 81       	ldd	r24, Y+2	; 0x02
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	29 c0       	rjmp	.+82     	; 0x1a38 <fgetc+0x76>
    19e6:	22 ff       	sbrs	r18, 2
    19e8:	0f c0       	rjmp	.+30     	; 0x1a08 <fgetc+0x46>
    19ea:	e8 81       	ld	r30, Y
    19ec:	f9 81       	ldd	r31, Y+1	; 0x01
    19ee:	80 81       	ld	r24, Z
    19f0:	08 2e       	mov	r0, r24
    19f2:	00 0c       	add	r0, r0
    19f4:	99 0b       	sbc	r25, r25
    19f6:	00 97       	sbiw	r24, 0x00	; 0
    19f8:	19 f4       	brne	.+6      	; 0x1a00 <fgetc+0x3e>
    19fa:	20 62       	ori	r18, 0x20	; 32
    19fc:	2b 83       	std	Y+3, r18	; 0x03
    19fe:	1a c0       	rjmp	.+52     	; 0x1a34 <fgetc+0x72>
    1a00:	31 96       	adiw	r30, 0x01	; 1
    1a02:	f9 83       	std	Y+1, r31	; 0x01
    1a04:	e8 83       	st	Y, r30
    1a06:	0e c0       	rjmp	.+28     	; 0x1a24 <fgetc+0x62>
    1a08:	ea 85       	ldd	r30, Y+10	; 0x0a
    1a0a:	fb 85       	ldd	r31, Y+11	; 0x0b
    1a0c:	09 95       	icall
    1a0e:	97 ff       	sbrs	r25, 7
    1a10:	09 c0       	rjmp	.+18     	; 0x1a24 <fgetc+0x62>
    1a12:	2b 81       	ldd	r18, Y+3	; 0x03
    1a14:	01 96       	adiw	r24, 0x01	; 1
    1a16:	11 f0       	breq	.+4      	; 0x1a1c <fgetc+0x5a>
    1a18:	80 e2       	ldi	r24, 0x20	; 32
    1a1a:	01 c0       	rjmp	.+2      	; 0x1a1e <fgetc+0x5c>
    1a1c:	80 e1       	ldi	r24, 0x10	; 16
    1a1e:	82 2b       	or	r24, r18
    1a20:	8b 83       	std	Y+3, r24	; 0x03
    1a22:	08 c0       	rjmp	.+16     	; 0x1a34 <fgetc+0x72>
    1a24:	2e 81       	ldd	r18, Y+6	; 0x06
    1a26:	3f 81       	ldd	r19, Y+7	; 0x07
    1a28:	2f 5f       	subi	r18, 0xFF	; 255
    1a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2c:	3f 83       	std	Y+7, r19	; 0x07
    1a2e:	2e 83       	std	Y+6, r18	; 0x06
    1a30:	99 27       	eor	r25, r25
    1a32:	02 c0       	rjmp	.+4      	; 0x1a38 <fgetc+0x76>
    1a34:	8f ef       	ldi	r24, 0xFF	; 255
    1a36:	9f ef       	ldi	r25, 0xFF	; 255
    1a38:	df 91       	pop	r29
    1a3a:	cf 91       	pop	r28
    1a3c:	08 95       	ret

00001a3e <fputc>:
    1a3e:	0f 93       	push	r16
    1a40:	1f 93       	push	r17
    1a42:	cf 93       	push	r28
    1a44:	df 93       	push	r29
    1a46:	fb 01       	movw	r30, r22
    1a48:	23 81       	ldd	r18, Z+3	; 0x03
    1a4a:	21 fd       	sbrc	r18, 1
    1a4c:	03 c0       	rjmp	.+6      	; 0x1a54 <fputc+0x16>
    1a4e:	8f ef       	ldi	r24, 0xFF	; 255
    1a50:	9f ef       	ldi	r25, 0xFF	; 255
    1a52:	2c c0       	rjmp	.+88     	; 0x1aac <fputc+0x6e>
    1a54:	22 ff       	sbrs	r18, 2
    1a56:	16 c0       	rjmp	.+44     	; 0x1a84 <fputc+0x46>
    1a58:	46 81       	ldd	r20, Z+6	; 0x06
    1a5a:	57 81       	ldd	r21, Z+7	; 0x07
    1a5c:	24 81       	ldd	r18, Z+4	; 0x04
    1a5e:	35 81       	ldd	r19, Z+5	; 0x05
    1a60:	42 17       	cp	r20, r18
    1a62:	53 07       	cpc	r21, r19
    1a64:	44 f4       	brge	.+16     	; 0x1a76 <fputc+0x38>
    1a66:	a0 81       	ld	r26, Z
    1a68:	b1 81       	ldd	r27, Z+1	; 0x01
    1a6a:	9d 01       	movw	r18, r26
    1a6c:	2f 5f       	subi	r18, 0xFF	; 255
    1a6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a70:	31 83       	std	Z+1, r19	; 0x01
    1a72:	20 83       	st	Z, r18
    1a74:	8c 93       	st	X, r24
    1a76:	26 81       	ldd	r18, Z+6	; 0x06
    1a78:	37 81       	ldd	r19, Z+7	; 0x07
    1a7a:	2f 5f       	subi	r18, 0xFF	; 255
    1a7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7e:	37 83       	std	Z+7, r19	; 0x07
    1a80:	26 83       	std	Z+6, r18	; 0x06
    1a82:	14 c0       	rjmp	.+40     	; 0x1aac <fputc+0x6e>
    1a84:	8b 01       	movw	r16, r22
    1a86:	ec 01       	movw	r28, r24
    1a88:	fb 01       	movw	r30, r22
    1a8a:	00 84       	ldd	r0, Z+8	; 0x08
    1a8c:	f1 85       	ldd	r31, Z+9	; 0x09
    1a8e:	e0 2d       	mov	r30, r0
    1a90:	09 95       	icall
    1a92:	89 2b       	or	r24, r25
    1a94:	e1 f6       	brne	.-72     	; 0x1a4e <fputc+0x10>
    1a96:	d8 01       	movw	r26, r16
    1a98:	16 96       	adiw	r26, 0x06	; 6
    1a9a:	8d 91       	ld	r24, X+
    1a9c:	9c 91       	ld	r25, X
    1a9e:	17 97       	sbiw	r26, 0x07	; 7
    1aa0:	01 96       	adiw	r24, 0x01	; 1
    1aa2:	17 96       	adiw	r26, 0x07	; 7
    1aa4:	9c 93       	st	X, r25
    1aa6:	8e 93       	st	-X, r24
    1aa8:	16 97       	sbiw	r26, 0x06	; 6
    1aaa:	ce 01       	movw	r24, r28
    1aac:	df 91       	pop	r29
    1aae:	cf 91       	pop	r28
    1ab0:	1f 91       	pop	r17
    1ab2:	0f 91       	pop	r16
    1ab4:	08 95       	ret

00001ab6 <printf>:
    1ab6:	a0 e0       	ldi	r26, 0x00	; 0
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	e1 e6       	ldi	r30, 0x61	; 97
    1abc:	fd e0       	ldi	r31, 0x0D	; 13
    1abe:	0c 94 b0 0b 	jmp	0x1760	; 0x1760 <__prologue_saves__+0x20>
    1ac2:	ae 01       	movw	r20, r28
    1ac4:	4b 5f       	subi	r20, 0xFB	; 251
    1ac6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ac8:	fa 01       	movw	r30, r20
    1aca:	61 91       	ld	r22, Z+
    1acc:	71 91       	ld	r23, Z+
    1ace:	af 01       	movw	r20, r30
    1ad0:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__iob+0x2>
    1ad4:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <__iob+0x3>
    1ad8:	0e 94 1a 03 	call	0x634	; 0x634 <vfprintf>
    1adc:	e2 e0       	ldi	r30, 0x02	; 2
    1ade:	0c 94 cc 0b 	jmp	0x1798	; 0x1798 <__epilogue_restores__+0x20>

00001ae2 <puts>:
    1ae2:	0f 93       	push	r16
    1ae4:	1f 93       	push	r17
    1ae6:	cf 93       	push	r28
    1ae8:	df 93       	push	r29
    1aea:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <__iob+0x2>
    1aee:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <__iob+0x3>
    1af2:	23 81       	ldd	r18, Z+3	; 0x03
    1af4:	21 ff       	sbrs	r18, 1
    1af6:	1b c0       	rjmp	.+54     	; 0x1b2e <puts+0x4c>
    1af8:	8c 01       	movw	r16, r24
    1afa:	d0 e0       	ldi	r29, 0x00	; 0
    1afc:	c0 e0       	ldi	r28, 0x00	; 0
    1afe:	f8 01       	movw	r30, r16
    1b00:	81 91       	ld	r24, Z+
    1b02:	8f 01       	movw	r16, r30
    1b04:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__iob+0x2>
    1b08:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__iob+0x3>
    1b0c:	db 01       	movw	r26, r22
    1b0e:	18 96       	adiw	r26, 0x08	; 8
    1b10:	ed 91       	ld	r30, X+
    1b12:	fc 91       	ld	r31, X
    1b14:	19 97       	sbiw	r26, 0x09	; 9
    1b16:	88 23       	and	r24, r24
    1b18:	31 f0       	breq	.+12     	; 0x1b26 <puts+0x44>
    1b1a:	09 95       	icall
    1b1c:	89 2b       	or	r24, r25
    1b1e:	79 f3       	breq	.-34     	; 0x1afe <puts+0x1c>
    1b20:	df ef       	ldi	r29, 0xFF	; 255
    1b22:	cf ef       	ldi	r28, 0xFF	; 255
    1b24:	ec cf       	rjmp	.-40     	; 0x1afe <puts+0x1c>
    1b26:	8a e0       	ldi	r24, 0x0A	; 10
    1b28:	09 95       	icall
    1b2a:	89 2b       	or	r24, r25
    1b2c:	19 f0       	breq	.+6      	; 0x1b34 <puts+0x52>
    1b2e:	8f ef       	ldi	r24, 0xFF	; 255
    1b30:	9f ef       	ldi	r25, 0xFF	; 255
    1b32:	02 c0       	rjmp	.+4      	; 0x1b38 <puts+0x56>
    1b34:	8d 2f       	mov	r24, r29
    1b36:	9c 2f       	mov	r25, r28
    1b38:	df 91       	pop	r29
    1b3a:	cf 91       	pop	r28
    1b3c:	1f 91       	pop	r17
    1b3e:	0f 91       	pop	r16
    1b40:	08 95       	ret

00001b42 <scanf>:
    1b42:	a0 e0       	ldi	r26, 0x00	; 0
    1b44:	b0 e0       	ldi	r27, 0x00	; 0
    1b46:	e7 ea       	ldi	r30, 0xA7	; 167
    1b48:	fd e0       	ldi	r31, 0x0D	; 13
    1b4a:	0c 94 b0 0b 	jmp	0x1760	; 0x1760 <__prologue_saves__+0x20>
    1b4e:	ae 01       	movw	r20, r28
    1b50:	4b 5f       	subi	r20, 0xFB	; 251
    1b52:	5f 4f       	sbci	r21, 0xFF	; 255
    1b54:	fa 01       	movw	r30, r20
    1b56:	61 91       	ld	r22, Z+
    1b58:	71 91       	ld	r23, Z+
    1b5a:	af 01       	movw	r20, r30
    1b5c:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__iob>
    1b60:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__iob+0x1>
    1b64:	0e 94 73 09 	call	0x12e6	; 0x12e6 <vfscanf>
    1b68:	e2 e0       	ldi	r30, 0x02	; 2
    1b6a:	0c 94 cc 0b 	jmp	0x1798	; 0x1798 <__epilogue_restores__+0x20>

00001b6e <ungetc>:
    1b6e:	fb 01       	movw	r30, r22
    1b70:	23 81       	ldd	r18, Z+3	; 0x03
    1b72:	20 ff       	sbrs	r18, 0
    1b74:	12 c0       	rjmp	.+36     	; 0x1b9a <ungetc+0x2c>
    1b76:	26 fd       	sbrc	r18, 6
    1b78:	10 c0       	rjmp	.+32     	; 0x1b9a <ungetc+0x2c>
    1b7a:	8f 3f       	cpi	r24, 0xFF	; 255
    1b7c:	3f ef       	ldi	r19, 0xFF	; 255
    1b7e:	93 07       	cpc	r25, r19
    1b80:	61 f0       	breq	.+24     	; 0x1b9a <ungetc+0x2c>
    1b82:	82 83       	std	Z+2, r24	; 0x02
    1b84:	2f 7d       	andi	r18, 0xDF	; 223
    1b86:	20 64       	ori	r18, 0x40	; 64
    1b88:	23 83       	std	Z+3, r18	; 0x03
    1b8a:	26 81       	ldd	r18, Z+6	; 0x06
    1b8c:	37 81       	ldd	r19, Z+7	; 0x07
    1b8e:	21 50       	subi	r18, 0x01	; 1
    1b90:	31 09       	sbc	r19, r1
    1b92:	37 83       	std	Z+7, r19	; 0x07
    1b94:	26 83       	std	Z+6, r18	; 0x06
    1b96:	99 27       	eor	r25, r25
    1b98:	08 95       	ret
    1b9a:	8f ef       	ldi	r24, 0xFF	; 255
    1b9c:	9f ef       	ldi	r25, 0xFF	; 255
    1b9e:	08 95       	ret

00001ba0 <__ultoa_invert>:
    1ba0:	fa 01       	movw	r30, r20
    1ba2:	aa 27       	eor	r26, r26
    1ba4:	28 30       	cpi	r18, 0x08	; 8
    1ba6:	51 f1       	breq	.+84     	; 0x1bfc <__ultoa_invert+0x5c>
    1ba8:	20 31       	cpi	r18, 0x10	; 16
    1baa:	81 f1       	breq	.+96     	; 0x1c0c <__ultoa_invert+0x6c>
    1bac:	e8 94       	clt
    1bae:	6f 93       	push	r22
    1bb0:	6e 7f       	andi	r22, 0xFE	; 254
    1bb2:	6e 5f       	subi	r22, 0xFE	; 254
    1bb4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bb6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bba:	af 4f       	sbci	r26, 0xFF	; 255
    1bbc:	b1 e0       	ldi	r27, 0x01	; 1
    1bbe:	3e d0       	rcall	.+124    	; 0x1c3c <__ultoa_invert+0x9c>
    1bc0:	b4 e0       	ldi	r27, 0x04	; 4
    1bc2:	3c d0       	rcall	.+120    	; 0x1c3c <__ultoa_invert+0x9c>
    1bc4:	67 0f       	add	r22, r23
    1bc6:	78 1f       	adc	r23, r24
    1bc8:	89 1f       	adc	r24, r25
    1bca:	9a 1f       	adc	r25, r26
    1bcc:	a1 1d       	adc	r26, r1
    1bce:	68 0f       	add	r22, r24
    1bd0:	79 1f       	adc	r23, r25
    1bd2:	8a 1f       	adc	r24, r26
    1bd4:	91 1d       	adc	r25, r1
    1bd6:	a1 1d       	adc	r26, r1
    1bd8:	6a 0f       	add	r22, r26
    1bda:	71 1d       	adc	r23, r1
    1bdc:	81 1d       	adc	r24, r1
    1bde:	91 1d       	adc	r25, r1
    1be0:	a1 1d       	adc	r26, r1
    1be2:	20 d0       	rcall	.+64     	; 0x1c24 <__ultoa_invert+0x84>
    1be4:	09 f4       	brne	.+2      	; 0x1be8 <__ultoa_invert+0x48>
    1be6:	68 94       	set
    1be8:	3f 91       	pop	r19
    1bea:	2a e0       	ldi	r18, 0x0A	; 10
    1bec:	26 9f       	mul	r18, r22
    1bee:	11 24       	eor	r1, r1
    1bf0:	30 19       	sub	r19, r0
    1bf2:	30 5d       	subi	r19, 0xD0	; 208
    1bf4:	31 93       	st	Z+, r19
    1bf6:	de f6       	brtc	.-74     	; 0x1bae <__ultoa_invert+0xe>
    1bf8:	cf 01       	movw	r24, r30
    1bfa:	08 95       	ret
    1bfc:	46 2f       	mov	r20, r22
    1bfe:	47 70       	andi	r20, 0x07	; 7
    1c00:	40 5d       	subi	r20, 0xD0	; 208
    1c02:	41 93       	st	Z+, r20
    1c04:	b3 e0       	ldi	r27, 0x03	; 3
    1c06:	0f d0       	rcall	.+30     	; 0x1c26 <__ultoa_invert+0x86>
    1c08:	c9 f7       	brne	.-14     	; 0x1bfc <__ultoa_invert+0x5c>
    1c0a:	f6 cf       	rjmp	.-20     	; 0x1bf8 <__ultoa_invert+0x58>
    1c0c:	46 2f       	mov	r20, r22
    1c0e:	4f 70       	andi	r20, 0x0F	; 15
    1c10:	40 5d       	subi	r20, 0xD0	; 208
    1c12:	4a 33       	cpi	r20, 0x3A	; 58
    1c14:	18 f0       	brcs	.+6      	; 0x1c1c <__ultoa_invert+0x7c>
    1c16:	49 5d       	subi	r20, 0xD9	; 217
    1c18:	31 fd       	sbrc	r19, 1
    1c1a:	40 52       	subi	r20, 0x20	; 32
    1c1c:	41 93       	st	Z+, r20
    1c1e:	02 d0       	rcall	.+4      	; 0x1c24 <__ultoa_invert+0x84>
    1c20:	a9 f7       	brne	.-22     	; 0x1c0c <__ultoa_invert+0x6c>
    1c22:	ea cf       	rjmp	.-44     	; 0x1bf8 <__ultoa_invert+0x58>
    1c24:	b4 e0       	ldi	r27, 0x04	; 4
    1c26:	a6 95       	lsr	r26
    1c28:	97 95       	ror	r25
    1c2a:	87 95       	ror	r24
    1c2c:	77 95       	ror	r23
    1c2e:	67 95       	ror	r22
    1c30:	ba 95       	dec	r27
    1c32:	c9 f7       	brne	.-14     	; 0x1c26 <__ultoa_invert+0x86>
    1c34:	00 97       	sbiw	r24, 0x00	; 0
    1c36:	61 05       	cpc	r22, r1
    1c38:	71 05       	cpc	r23, r1
    1c3a:	08 95       	ret
    1c3c:	9b 01       	movw	r18, r22
    1c3e:	ac 01       	movw	r20, r24
    1c40:	0a 2e       	mov	r0, r26
    1c42:	06 94       	lsr	r0
    1c44:	57 95       	ror	r21
    1c46:	47 95       	ror	r20
    1c48:	37 95       	ror	r19
    1c4a:	27 95       	ror	r18
    1c4c:	ba 95       	dec	r27
    1c4e:	c9 f7       	brne	.-14     	; 0x1c42 <__ultoa_invert+0xa2>
    1c50:	62 0f       	add	r22, r18
    1c52:	73 1f       	adc	r23, r19
    1c54:	84 1f       	adc	r24, r20
    1c56:	95 1f       	adc	r25, r21
    1c58:	a0 1d       	adc	r26, r0
    1c5a:	08 95       	ret

00001c5c <__ctype_isfalse>:
    1c5c:	99 27       	eor	r25, r25
    1c5e:	88 27       	eor	r24, r24

00001c60 <__ctype_istrue>:
    1c60:	08 95       	ret

00001c62 <_exit>:
    1c62:	f8 94       	cli

00001c64 <__stop_program>:
    1c64:	ff cf       	rjmp	.-2      	; 0x1c64 <__stop_program>
