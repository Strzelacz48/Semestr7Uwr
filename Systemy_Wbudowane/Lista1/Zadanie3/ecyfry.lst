
ecyfry.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000188  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000188  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000750  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c9f  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000015eb  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015fc  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  0000163c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  00001c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  000021d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000021ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	60 00       	.word	0x0060	; ????
  6a:	63 00       	.word	0x0063	; ????
  6c:	66 00       	.word	0x0066	; ????
  6e:	69 00       	.word	0x0069	; ????
  70:	6c 00       	.word	0x006c	; ????
  72:	6f 00       	.word	0x006f	; ????
  74:	72 00       	.word	0x0072	; ????
  76:	75 00       	.word	0x0075	; ????
  78:	5d 00       	.word	0x005d	; ????
  7a:	5a 00       	.word	0x005a	; ????
  7c:	b6 00       	.word	0x00b6	; ????
  7e:	b4 00       	.word	0x00b4	; ????
  80:	b2 00       	.word	0x00b2	; ????
  82:	b0 00       	.word	0x00b0	; ????
  84:	ae 00       	.word	0x00ae	; ????
  86:	a2 00       	.word	0x00a2	; ????
  88:	b8 00       	.word	0x00b8	; ????
  8a:	ba 00       	.word	0x00ba	; ????

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d8 e0       	ldi	r29, 0x08	; 8
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  9c:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <display>:
#define dp2 PD7
#define LED_DDR DDRD
#define LED_PORT PORTD

void display(int number){
  switch(number){
  a4:	8a 30       	cpi	r24, 0x0A	; 10
  a6:	91 05       	cpc	r25, r1
  a8:	38 f4       	brcc	.+14     	; 0xb8 <display+0x14>
  aa:	fc 01       	movw	r30, r24
  ac:	ec 5c       	subi	r30, 0xCC	; 204
  ae:	ff 4f       	sbci	r31, 0xFF	; 255
  b0:	0c 94 bc 00 	jmp	0x178	; 0x178 <__tablejump2__>
      //a,b,g,f,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f) & ~_BV(g);
      break;
    case 9:
      //a,b,g,f,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(f) & ~_BV(g);
  b4:	80 e9       	ldi	r24, 0x90	; 144
  b6:	8b b9       	out	0x0b, r24	; 11
  b8:	08 95       	ret
      //a,b,c
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c);
      break;
    case 8:
      //a,b,g,f,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f) & ~_BV(g);
  ba:	80 e8       	ldi	r24, 0x80	; 128
  bc:	8b b9       	out	0x0b, r24	; 11
      break;
  be:	08 95       	ret

void display(int number){
  switch(number){
    case 0:
      //a,b,c,d,e,f
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
  c0:	80 ec       	ldi	r24, 0xC0	; 192
  c2:	8b b9       	out	0x0b, r24	; 11
      break;
  c4:	08 95       	ret
    case 1:
      //b,c
      LED_PORT = 0xFF & ~_BV(b) & ~_BV(c);
  c6:	89 ef       	ldi	r24, 0xF9	; 249
  c8:	8b b9       	out	0x0b, r24	; 11
      break;
  ca:	08 95       	ret
    case 2:
      //a,b,g,e,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(d) & ~_BV(e);
  cc:	84 ea       	ldi	r24, 0xA4	; 164
  ce:	8b b9       	out	0x0b, r24	; 11
      break;
  d0:	08 95       	ret
    case 3:
      //a,b,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(c) & ~_BV(d);
  d2:	80 eb       	ldi	r24, 0xB0	; 176
  d4:	8b b9       	out	0x0b, r24	; 11
      break;
  d6:	08 95       	ret
    case 4:
      //f,g,b,c
      LED_PORT = 0xFF & ~_BV(f) & ~_BV(g) & ~_BV(c) & ~_BV(b);
  d8:	89 e9       	ldi	r24, 0x99	; 153
  da:	8b b9       	out	0x0b, r24	; 11
      break;
  dc:	08 95       	ret
    case 5:
      //a,f,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(f) & ~_BV(c) & ~_BV(d) & ~_BV(g);
  de:	82 e9       	ldi	r24, 0x92	; 146
  e0:	8b b9       	out	0x0b, r24	; 11
      break;
  e2:	08 95       	ret
    case 6:
      //a,f,g,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(g) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
  e4:	82 e8       	ldi	r24, 0x82	; 130
  e6:	8b b9       	out	0x0b, r24	; 11
      break;
  e8:	08 95       	ret
    case 7:
      //a,b,c
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c);
  ea:	88 ef       	ldi	r24, 0xF8	; 248
  ec:	8b b9       	out	0x0b, r24	; 11
      break;
  ee:	08 95       	ret

000000f0 <main>:
  return;
}
//_BV(x) to shift 1 o x
int main() {
  //
    LED_DDR = 0xFF;
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	8a b9       	out	0x0a, r24	; 10
    LED_PORT = 0xFF;
  f4:	8b b9       	out	0x0b, r24	; 11

void display(int number){
  switch(number){
    case 0:
      //a,b,c,d,e,f
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
  f6:	c0 ec       	ldi	r28, 0xC0	; 192
      //a,b,c
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c);
      break;
    case 8:
      //a,b,g,f,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f) & ~_BV(g);
  f8:	b0 e8       	ldi	r27, 0x80	; 128
      //a,f,g,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(g) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
      break;
    case 7:
      //a,b,c
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c);
  fa:	a8 ef       	ldi	r26, 0xF8	; 248
      //a,f,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(f) & ~_BV(c) & ~_BV(d) & ~_BV(g);
      break;
    case 6:
      //a,f,g,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(g) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
  fc:	72 e8       	ldi	r23, 0x82	; 130
      //f,g,b,c
      LED_PORT = 0xFF & ~_BV(f) & ~_BV(g) & ~_BV(c) & ~_BV(b);
      break;
    case 5:
      //a,f,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(f) & ~_BV(c) & ~_BV(d) & ~_BV(g);
  fe:	62 e9       	ldi	r22, 0x92	; 146
      //a,b,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(c) & ~_BV(d);
      break;
    case 4:
      //f,g,b,c
      LED_PORT = 0xFF & ~_BV(f) & ~_BV(g) & ~_BV(c) & ~_BV(b);
 100:	59 e9       	ldi	r21, 0x99	; 153
      //a,b,g,e,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(d) & ~_BV(e);
      break;
    case 3:
      //a,b,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(c) & ~_BV(d);
 102:	40 eb       	ldi	r20, 0xB0	; 176
      //b,c
      LED_PORT = 0xFF & ~_BV(b) & ~_BV(c);
      break;
    case 2:
      //a,b,g,e,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(d) & ~_BV(e);
 104:	34 ea       	ldi	r19, 0xA4	; 164
      //a,b,c,d,e,f
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
      break;
    case 1:
      //b,c
      LED_PORT = 0xFF & ~_BV(b) & ~_BV(c);
 106:	29 ef       	ldi	r18, 0xF9	; 249
      
  }
  return;
}
//_BV(x) to shift 1 o x
int main() {
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
#define dp2 PD7
#define LED_DDR DDRD
#define LED_PORT PORTD

void display(int number){
  switch(number){
 10c:	fc 01       	movw	r30, r24
 10e:	32 97       	sbiw	r30, 0x02	; 2
 110:	e8 30       	cpi	r30, 0x08	; 8
 112:	f1 05       	cpc	r31, r1
 114:	98 f0       	brcs	.+38     	; 0x13c <main+0x4c>
    case 0:
      //a,b,c,d,e,f
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
 116:	cb b9       	out	0x0b, r28	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 118:	df ef       	ldi	r29, 0xFF	; 255
 11a:	e3 ed       	ldi	r30, 0xD3	; 211
 11c:	f0 e3       	ldi	r31, 0x30	; 48
 11e:	d1 50       	subi	r29, 0x01	; 1
 120:	e0 40       	sbci	r30, 0x00	; 0
 122:	f0 40       	sbci	r31, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0x2e>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0x38>
 128:	00 00       	nop
  //
    LED_DDR = 0xFF;
    LED_PORT = 0xFF;
  while (1) {

    for(int i = 0; i < 9; i++){
 12a:	89 30       	cpi	r24, 0x09	; 9
 12c:	91 05       	cpc	r25, r1
 12e:	61 f3       	breq	.-40     	; 0x108 <main+0x18>
 130:	01 96       	adiw	r24, 0x01	; 1
#define dp2 PD7
#define LED_DDR DDRD
#define LED_PORT PORTD

void display(int number){
  switch(number){
 132:	fc 01       	movw	r30, r24
 134:	32 97       	sbiw	r30, 0x02	; 2
 136:	e8 30       	cpi	r30, 0x08	; 8
 138:	f1 05       	cpc	r31, r1
 13a:	68 f7       	brcc	.-38     	; 0x116 <main+0x26>
 13c:	e2 5c       	subi	r30, 0xC2	; 194
 13e:	ff 4f       	sbci	r31, 0xFF	; 255
 140:	0c 94 bc 00 	jmp	0x178	; 0x178 <__tablejump2__>
      //a,f,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(f) & ~_BV(c) & ~_BV(d) & ~_BV(g);
      break;
    case 6:
      //a,f,g,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(g) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
 144:	7b b9       	out	0x0b, r23	; 11
 146:	df ef       	ldi	r29, 0xFF	; 255
 148:	e3 ed       	ldi	r30, 0xD3	; 211
 14a:	f0 e3       	ldi	r31, 0x30	; 48
 14c:	d1 50       	subi	r29, 0x01	; 1
 14e:	e0 40       	sbci	r30, 0x00	; 0
 150:	f0 40       	sbci	r31, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0x5c>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0x66>
 156:	00 00       	nop
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	eb cf       	rjmp	.-42     	; 0x132 <main+0x42>
      //f,g,b,c
      LED_PORT = 0xFF & ~_BV(f) & ~_BV(g) & ~_BV(c) & ~_BV(b);
      break;
    case 5:
      //a,f,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(f) & ~_BV(c) & ~_BV(d) & ~_BV(g);
 15c:	6b b9       	out	0x0b, r22	; 11
 15e:	f3 cf       	rjmp	.-26     	; 0x146 <main+0x56>
      //a,b,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(c) & ~_BV(d);
      break;
    case 4:
      //f,g,b,c
      LED_PORT = 0xFF & ~_BV(f) & ~_BV(g) & ~_BV(c) & ~_BV(b);
 160:	5b b9       	out	0x0b, r21	; 11
 162:	f1 cf       	rjmp	.-30     	; 0x146 <main+0x56>
      //a,b,g,e,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(d) & ~_BV(e);
      break;
    case 3:
      //a,b,g,c,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(c) & ~_BV(d);
 164:	4b b9       	out	0x0b, r20	; 11
 166:	ef cf       	rjmp	.-34     	; 0x146 <main+0x56>
      //b,c
      LED_PORT = 0xFF & ~_BV(b) & ~_BV(c);
      break;
    case 2:
      //a,b,g,e,d
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(g) & ~_BV(d) & ~_BV(e);
 168:	3b b9       	out	0x0b, r19	; 11
 16a:	ed cf       	rjmp	.-38     	; 0x146 <main+0x56>
      //a,b,c,d,e,f
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
      break;
    case 1:
      //b,c
      LED_PORT = 0xFF & ~_BV(b) & ~_BV(c);
 16c:	2b b9       	out	0x0b, r18	; 11
 16e:	eb cf       	rjmp	.-42     	; 0x146 <main+0x56>
      //a,f,g,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(g) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f);
      break;
    case 7:
      //a,b,c
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c);
 170:	ab b9       	out	0x0b, r26	; 11
 172:	e9 cf       	rjmp	.-46     	; 0x146 <main+0x56>
      break;
    case 8:
      //a,b,g,f,c,d,e
      LED_PORT = 0xFF & ~_BV(a) & ~_BV(b) & ~_BV(c) & ~_BV(d) & ~_BV(e) & ~_BV(f) & ~_BV(g);
 174:	bb b9       	out	0x0b, r27	; 11
 176:	d0 cf       	rjmp	.-96     	; 0x118 <main+0x28>

00000178 <__tablejump2__>:
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	05 90       	lpm	r0, Z+
 17e:	f4 91       	lpm	r31, Z
 180:	e0 2d       	mov	r30, r0
 182:	09 94       	ijmp

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
